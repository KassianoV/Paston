
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDEARRAY ATRIB BEGIN COLON COMMA CONST CONST_VALOR DEF DIVIDE DO DOT ELSE END EQUAL EQUAL_TO GREATER_THAN GREATER_THAN_OR_EQUAL ID IF INTEGER LBRACKET LESS_THAN LESS_THAN_OR_EQUAL LPAREN MINUS NOT_EQUAL_TO NUMERO OF PLUS RBRACKET READ REAL RECORD RETURN RPAREN SEMI STRING THEN TIMES TYPE VAR WHILE WRITElista_comandos : lista_comandos comando\n                      | emptycomando : declaracao_var_block\n               | atribuicao\n               | function_declaration\n               | return_statement\n               | type_declaration_blocktype_declaration_block : TYPE type_definition_listtype_definition_list : type_definition_list single_type_definition\n                           | single_type_definitionsingle_type_definition : ID EQUAL_TO type_definition SEMItype_definition : array_type_definition\n                       | record_type_definitiondeclaracao_var_block : VAR var_declaration_listvar_declaration_list : var_declaration_list declaracao_var\n                           | declaracao_vardeclaracao_var : ID COLON tipo_specifier SEMIarray_type_definition : ARRAY LBRACKET NUMERO RBRACKET OF tipo_specifierrecord_type_definition : RECORD field_list END SEMIfield_list : field_list field_declaration\n                  | emptyfield_declaration : ID COLON tipo_specifier SEMItipo_specifier : INTEGER\n                      | REAL\n                      | STRING\n                      | IDatribuicao : Variavel ATRIB expressao SEMIfunction_declaration : DEF ID LPAREN params_opt RPAREN tipo_retorno_opt function_bodyfunction_body : var_declarations_opt BEGIN lista_comandos END SEMIvar_declarations_opt : VAR var_declaration_list\n                           | emptyreturn_statement : RETURN expressao SEMIparams_opt : params\n                  | emptyparams : params COMMA param\n              | paramparam : ID COLON tipo_specifiertipo_retorno_opt : COLON COLON tipo_specifier\n                       | emptyexpressao : expressao PLUS expressao\n                 | expressao MINUS expressao\n                 | expressao TIMES expressao\n                 | expressao DIVIDE expressaoexpressao : termotermo : LPAREN expressao RPAREN\n             | NUMERO\n             | function_call\n             | VariavelVariavel : ID\n                | array_access\n                | record_accessrecord_access : Variavel DOT IDarray_access : ID LBRACKET expressao RBRACKETfunction_call : ID LPAREN args_opt RPARENargs_opt : args\n                | emptyargs : args COMMA expressao\n            | expressaoempty :'
    
_lr_action_items = {'VAR':([0,1,2,3,4,5,6,7,8,17,18,31,32,34,40,47,49,51,52,53,54,75,77,81,86,88,95,103,105,108,112,],[-59,9,-2,-1,-3,-4,-5,-6,-7,-14,-16,-8,-10,-15,-32,-9,-26,-23,-24,-25,-27,-17,-59,-11,97,-39,-28,-59,-38,9,-29,]),'DEF':([0,1,2,3,4,5,6,7,8,17,18,31,32,34,40,47,54,75,81,95,103,108,112,],[-59,11,-2,-1,-3,-4,-5,-6,-7,-14,-16,-8,-10,-15,-32,-9,-27,-17,-11,-28,-59,11,-29,]),'RETURN':([0,1,2,3,4,5,6,7,8,17,18,31,32,34,40,47,54,75,81,95,103,108,112,],[-59,13,-2,-1,-3,-4,-5,-6,-7,-14,-16,-8,-10,-15,-32,-9,-27,-17,-11,-28,-59,13,-29,]),'TYPE':([0,1,2,3,4,5,6,7,8,17,18,31,32,34,40,47,54,75,81,95,103,108,112,],[-59,14,-2,-1,-3,-4,-5,-6,-7,-14,-16,-8,-10,-15,-32,-9,-27,-17,-11,-28,-59,14,-29,]),'ID':([0,1,2,3,4,5,6,7,8,9,11,13,14,17,18,20,21,23,26,31,32,34,35,38,40,41,42,43,44,46,47,54,74,75,76,78,80,81,83,84,93,95,97,99,102,103,104,106,108,110,112,],[-59,12,-2,-1,-3,-4,-5,-6,-7,19,22,30,33,19,-16,30,37,30,30,33,-10,-15,49,55,-32,30,30,30,30,30,-9,-27,-59,-17,49,55,30,-11,94,-21,-20,-28,19,49,49,-59,19,49,12,-22,-29,]),'$end':([0,1,2,3,4,5,6,7,8,17,18,31,32,34,40,47,54,75,81,95,112,],[-59,0,-2,-1,-3,-4,-5,-6,-7,-14,-16,-8,-10,-15,-32,-9,-27,-17,-11,-28,-29,]),'END':([2,3,4,5,6,7,8,17,18,31,32,34,40,47,54,74,75,81,83,84,93,95,103,108,110,112,],[-2,-1,-3,-4,-5,-6,-7,-14,-16,-8,-10,-15,-32,-9,-27,-59,-17,-11,92,-21,-20,-28,-59,111,-22,-29,]),'ATRIB':([10,12,15,16,37,60,],[20,-49,-50,-51,-52,-53,]),'DOT':([10,12,15,16,29,30,37,60,],[21,-49,-50,-51,21,-49,-52,-53,]),'LBRACKET':([12,30,73,],[23,23,82,]),'LPAREN':([13,20,22,23,26,30,41,42,43,44,46,80,],[26,26,38,26,26,46,26,26,26,26,26,26,]),'NUMERO':([13,20,23,26,41,42,43,44,46,80,82,],[27,27,27,27,27,27,27,27,27,27,91,]),'SEMI':([15,16,24,25,27,28,29,30,36,37,49,50,51,52,53,60,61,62,63,64,65,70,71,72,79,92,101,107,109,111,],[-50,-51,40,-44,-46,-47,-48,-49,54,-52,-26,75,-23,-24,-25,-53,-40,-41,-42,-43,-45,81,-12,-13,-54,101,-19,110,-18,112,]),'PLUS':([15,16,24,25,27,28,29,30,36,37,39,45,60,61,62,63,64,65,69,79,90,],[-50,-51,41,-44,-46,-47,-48,-49,41,-52,41,41,-53,-40,-41,-42,-43,-45,41,-54,41,]),'MINUS':([15,16,24,25,27,28,29,30,36,37,39,45,60,61,62,63,64,65,69,79,90,],[-50,-51,42,-44,-46,-47,-48,-49,42,-52,42,42,-53,-40,-41,-42,-43,-45,42,-54,42,]),'TIMES':([15,16,24,25,27,28,29,30,36,37,39,45,60,61,62,63,64,65,69,79,90,],[-50,-51,43,-44,-46,-47,-48,-49,43,-52,43,43,-53,43,43,-42,-43,-45,43,-54,43,]),'DIVIDE':([15,16,24,25,27,28,29,30,36,37,39,45,60,61,62,63,64,65,69,79,90,],[-50,-51,44,-44,-46,-47,-48,-49,44,-52,44,44,-53,44,44,-42,-43,-45,44,-54,44,]),'RBRACKET':([15,16,25,27,28,29,30,37,39,60,61,62,63,64,65,79,91,],[-50,-51,-44,-46,-47,-48,-49,-52,60,-53,-40,-41,-42,-43,-45,-54,100,]),'RPAREN':([15,16,25,27,28,29,30,37,38,45,46,49,51,52,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,79,85,89,90,],[-50,-51,-44,-46,-47,-48,-49,-52,-59,65,-59,-26,-23,-24,-25,77,-33,-34,-36,-53,-40,-41,-42,-43,-45,79,-55,-56,-58,-54,-37,-35,-57,]),'COMMA':([15,16,25,27,28,29,30,37,49,51,52,53,57,59,60,61,62,63,64,65,67,69,79,85,89,90,],[-50,-51,-44,-46,-47,-48,-49,-52,-26,-23,-24,-25,78,-36,-53,-40,-41,-42,-43,-45,80,-58,-54,-37,-35,-57,]),'BEGIN':([18,34,49,51,52,53,75,77,86,88,96,98,104,105,],[-16,-15,-26,-23,-24,-25,-17,-59,-59,-39,103,-31,-30,-38,]),'COLON':([19,55,77,87,94,],[35,76,87,99,102,]),'EQUAL_TO':([33,],[48,]),'INTEGER':([35,76,99,102,106,],[51,51,51,51,51,]),'REAL':([35,76,99,102,106,],[52,52,52,52,52,]),'STRING':([35,76,99,102,106,],[53,53,53,53,53,]),'ARRAY':([48,],[73,]),'RECORD':([48,],[74,]),'OF':([100,],[106,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'lista_comandos':([0,103,],[1,108,]),'empty':([0,38,46,74,77,86,103,],[2,58,68,84,88,98,2,]),'comando':([1,108,],[3,3,]),'declaracao_var_block':([1,108,],[4,4,]),'atribuicao':([1,108,],[5,5,]),'function_declaration':([1,108,],[6,6,]),'return_statement':([1,108,],[7,7,]),'type_declaration_block':([1,108,],[8,8,]),'Variavel':([1,13,20,23,26,41,42,43,44,46,80,108,],[10,29,29,29,29,29,29,29,29,29,29,10,]),'array_access':([1,13,20,23,26,41,42,43,44,46,80,108,],[15,15,15,15,15,15,15,15,15,15,15,15,]),'record_access':([1,13,20,23,26,41,42,43,44,46,80,108,],[16,16,16,16,16,16,16,16,16,16,16,16,]),'var_declaration_list':([9,97,],[17,104,]),'declaracao_var':([9,17,97,104,],[18,34,18,34,]),'expressao':([13,20,23,26,41,42,43,44,46,80,],[24,36,39,45,61,62,63,64,69,90,]),'termo':([13,20,23,26,41,42,43,44,46,80,],[25,25,25,25,25,25,25,25,25,25,]),'function_call':([13,20,23,26,41,42,43,44,46,80,],[28,28,28,28,28,28,28,28,28,28,]),'type_definition_list':([14,],[31,]),'single_type_definition':([14,31,],[32,47,]),'tipo_specifier':([35,76,99,102,106,],[50,85,105,107,109,]),'params_opt':([38,],[56,]),'params':([38,],[57,]),'param':([38,78,],[59,89,]),'args_opt':([46,],[66,]),'args':([46,],[67,]),'type_definition':([48,],[70,]),'array_type_definition':([48,],[71,]),'record_type_definition':([48,],[72,]),'field_list':([74,],[83,]),'tipo_retorno_opt':([77,],[86,]),'field_declaration':([83,],[93,]),'function_body':([86,],[95,]),'var_declarations_opt':([86,],[96,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> lista_comandos","S'",1,None,None,None),
  ('lista_comandos -> lista_comandos comando','lista_comandos',2,'p_lista_comandos','parser.py',98),
  ('lista_comandos -> empty','lista_comandos',1,'p_lista_comandos','parser.py',99),
  ('comando -> declaracao_var_block','comando',1,'p_comando','parser.py',106),
  ('comando -> atribuicao','comando',1,'p_comando','parser.py',107),
  ('comando -> function_declaration','comando',1,'p_comando','parser.py',108),
  ('comando -> return_statement','comando',1,'p_comando','parser.py',109),
  ('comando -> type_declaration_block','comando',1,'p_comando','parser.py',110),
  ('type_declaration_block -> TYPE type_definition_list','type_declaration_block',2,'p_type_declaration_block','parser.py',115),
  ('type_definition_list -> type_definition_list single_type_definition','type_definition_list',2,'p_type_definition_list','parser.py',119),
  ('type_definition_list -> single_type_definition','type_definition_list',1,'p_type_definition_list','parser.py',120),
  ('single_type_definition -> ID EQUAL_TO type_definition SEMI','single_type_definition',4,'p_single_type_definition','parser.py',125),
  ('type_definition -> array_type_definition','type_definition',1,'p_type_definition','parser.py',130),
  ('type_definition -> record_type_definition','type_definition',1,'p_type_definition','parser.py',131),
  ('declaracao_var_block -> VAR var_declaration_list','declaracao_var_block',2,'p_declaracao_var_block','parser.py',135),
  ('var_declaration_list -> var_declaration_list declaracao_var','var_declaration_list',2,'p_var_declaration_list','parser.py',140),
  ('var_declaration_list -> declaracao_var','var_declaration_list',1,'p_var_declaration_list','parser.py',141),
  ('declaracao_var -> ID COLON tipo_specifier SEMI','declaracao_var',4,'p_declaracao_var','parser.py',146),
  ('array_type_definition -> ARRAY LBRACKET NUMERO RBRACKET OF tipo_specifier','array_type_definition',6,'p_array_type_definition','parser.py',151),
  ('record_type_definition -> RECORD field_list END SEMI','record_type_definition',4,'p_record_type_definition','parser.py',155),
  ('field_list -> field_list field_declaration','field_list',2,'p_field_list','parser.py',159),
  ('field_list -> empty','field_list',1,'p_field_list','parser.py',160),
  ('field_declaration -> ID COLON tipo_specifier SEMI','field_declaration',4,'p_field_declaration','parser.py',165),
  ('tipo_specifier -> INTEGER','tipo_specifier',1,'p_tipo_specifier','parser.py',169),
  ('tipo_specifier -> REAL','tipo_specifier',1,'p_tipo_specifier','parser.py',170),
  ('tipo_specifier -> STRING','tipo_specifier',1,'p_tipo_specifier','parser.py',171),
  ('tipo_specifier -> ID','tipo_specifier',1,'p_tipo_specifier','parser.py',172),
  ('atribuicao -> Variavel ATRIB expressao SEMI','atribuicao',4,'p_atribuicao','parser.py',176),
  ('function_declaration -> DEF ID LPAREN params_opt RPAREN tipo_retorno_opt function_body','function_declaration',7,'p_function_declaration','parser.py',180),
  ('function_body -> var_declarations_opt BEGIN lista_comandos END SEMI','function_body',5,'p_function_body','parser.py',184),
  ('var_declarations_opt -> VAR var_declaration_list','var_declarations_opt',2,'p_var_declarations_opt','parser.py',188),
  ('var_declarations_opt -> empty','var_declarations_opt',1,'p_var_declarations_opt','parser.py',189),
  ('return_statement -> RETURN expressao SEMI','return_statement',3,'p_return_statement','parser.py',193),
  ('params_opt -> params','params_opt',1,'p_params_opt','parser.py',197),
  ('params_opt -> empty','params_opt',1,'p_params_opt','parser.py',198),
  ('params -> params COMMA param','params',3,'p_params','parser.py',202),
  ('params -> param','params',1,'p_params','parser.py',203),
  ('param -> ID COLON tipo_specifier','param',3,'p_param','parser.py',208),
  ('tipo_retorno_opt -> COLON COLON tipo_specifier','tipo_retorno_opt',3,'p_tipo_retorno_opt','parser.py',212),
  ('tipo_retorno_opt -> empty','tipo_retorno_opt',1,'p_tipo_retorno_opt','parser.py',213),
  ('expressao -> expressao PLUS expressao','expressao',3,'p_expressao','parser.py',218),
  ('expressao -> expressao MINUS expressao','expressao',3,'p_expressao','parser.py',219),
  ('expressao -> expressao TIMES expressao','expressao',3,'p_expressao','parser.py',220),
  ('expressao -> expressao DIVIDE expressao','expressao',3,'p_expressao','parser.py',221),
  ('expressao -> termo','expressao',1,'p_expressao_termo','parser.py',225),
  ('termo -> LPAREN expressao RPAREN','termo',3,'p_termo','parser.py',229),
  ('termo -> NUMERO','termo',1,'p_termo','parser.py',230),
  ('termo -> function_call','termo',1,'p_termo','parser.py',231),
  ('termo -> Variavel','termo',1,'p_termo','parser.py',232),
  ('Variavel -> ID','Variavel',1,'p_Variavel','parser.py',238),
  ('Variavel -> array_access','Variavel',1,'p_Variavel','parser.py',239),
  ('Variavel -> record_access','Variavel',1,'p_Variavel','parser.py',240),
  ('record_access -> Variavel DOT ID','record_access',3,'p_record_access','parser.py',244),
  ('array_access -> ID LBRACKET expressao RBRACKET','array_access',4,'p_array_access','parser.py',248),
  ('function_call -> ID LPAREN args_opt RPAREN','function_call',4,'p_function_call','parser.py',252),
  ('args_opt -> args','args_opt',1,'p_args_opt','parser.py',256),
  ('args_opt -> empty','args_opt',1,'p_args_opt','parser.py',257),
  ('args -> args COMMA expressao','args',3,'p_args','parser.py',261),
  ('args -> expressao','args',1,'p_args','parser.py',262),
  ('empty -> <empty>','empty',0,'p_empty','parser.py',267),
]
