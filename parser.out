Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CONST
    CONST_VALOR
    DO
    ELSE
    EQUAL
    GREATER_THAN
    GREATER_THAN_OR_EQUAL
    IF
    LESS_THAN
    LESS_THAN_OR_EQUAL
    NOT_EQUAL_TO
    READ
    THEN
    WHILE
    WRITE

Grammar

Rule 0     S' -> lista_comandos
Rule 1     lista_comandos -> lista_comandos comando
Rule 2     lista_comandos -> empty
Rule 3     comando -> declaracao_var_block
Rule 4     comando -> atribuicao
Rule 5     comando -> function_declaration
Rule 6     comando -> return_statement
Rule 7     comando -> type_declaration_block
Rule 8     type_declaration_block -> TYPE type_definition_list
Rule 9     type_definition_list -> type_definition_list single_type_definition
Rule 10    type_definition_list -> single_type_definition
Rule 11    single_type_definition -> ID EQUAL_TO type_definition SEMI
Rule 12    type_definition -> array_type_definition
Rule 13    type_definition -> record_type_definition
Rule 14    declaracao_var_block -> VAR var_declaration_list
Rule 15    var_declaration_list -> var_declaration_list declaracao_var
Rule 16    var_declaration_list -> declaracao_var
Rule 17    declaracao_var -> ID COLON tipo_specifier SEMI
Rule 18    array_type_definition -> ARRAY LBRACKET NUMERO RBRACKET OF tipo_specifier
Rule 19    record_type_definition -> RECORD field_list END SEMI
Rule 20    field_list -> field_list field_declaration
Rule 21    field_list -> empty
Rule 22    field_declaration -> ID COLON tipo_specifier SEMI
Rule 23    tipo_specifier -> INTEGER
Rule 24    tipo_specifier -> REAL
Rule 25    tipo_specifier -> STRING
Rule 26    tipo_specifier -> ID
Rule 27    atribuicao -> Variavel ATRIB expressao SEMI
Rule 28    function_declaration -> DEF ID LPAREN params_opt RPAREN tipo_retorno_opt function_body
Rule 29    function_body -> var_declarations_opt BEGIN lista_comandos END SEMI
Rule 30    var_declarations_opt -> VAR var_declaration_list
Rule 31    var_declarations_opt -> empty
Rule 32    return_statement -> RETURN expressao SEMI
Rule 33    params_opt -> params
Rule 34    params_opt -> empty
Rule 35    params -> params COMMA param
Rule 36    params -> param
Rule 37    param -> ID COLON tipo_specifier
Rule 38    tipo_retorno_opt -> COLON COLON tipo_specifier
Rule 39    tipo_retorno_opt -> empty
Rule 40    expressao -> expressao PLUS expressao
Rule 41    expressao -> expressao MINUS expressao
Rule 42    expressao -> expressao TIMES expressao
Rule 43    expressao -> expressao DIVIDE expressao
Rule 44    expressao -> termo
Rule 45    termo -> LPAREN expressao RPAREN
Rule 46    termo -> NUMERO
Rule 47    termo -> function_call
Rule 48    termo -> Variavel
Rule 49    Variavel -> ID
Rule 50    Variavel -> array_access
Rule 51    Variavel -> record_access
Rule 52    record_access -> Variavel DOT ID
Rule 53    array_access -> ID LBRACKET expressao RBRACKET
Rule 54    function_call -> ID LPAREN args_opt RPAREN
Rule 55    args_opt -> args
Rule 56    args_opt -> empty
Rule 57    args -> args COMMA expressao
Rule 58    args -> expressao
Rule 59    empty -> <empty>

Terminals, with rules where they appear

ARRAY                : 18
ATRIB                : 27
BEGIN                : 29
COLON                : 17 22 37 38 38
COMMA                : 35 57
CONST                : 
CONST_VALOR          : 
DEF                  : 28
DIVIDE               : 43
DO                   : 
DOT                  : 52
ELSE                 : 
END                  : 19 29
EQUAL                : 
EQUAL_TO             : 11
GREATER_THAN         : 
GREATER_THAN_OR_EQUAL : 
ID                   : 11 17 22 26 28 37 49 52 53 54
IF                   : 
INTEGER              : 23
LBRACKET             : 18 53
LESS_THAN            : 
LESS_THAN_OR_EQUAL   : 
LPAREN               : 28 45 54
MINUS                : 41
NOT_EQUAL_TO         : 
NUMERO               : 18 46
OF                   : 18
PLUS                 : 40
RBRACKET             : 18 53
READ                 : 
REAL                 : 24
RECORD               : 19
RETURN               : 32
RPAREN               : 28 45 54
SEMI                 : 11 17 19 22 27 29 32
STRING               : 25
THEN                 : 
TIMES                : 42
TYPE                 : 8
VAR                  : 14 30
WHILE                : 
WRITE                : 
error                : 

Nonterminals, with rules where they appear

Variavel             : 27 48 52
args                 : 55 57
args_opt             : 54
array_access         : 50
array_type_definition : 12
atribuicao           : 4
comando              : 1
declaracao_var       : 15 16
declaracao_var_block : 3
empty                : 2 21 31 34 39 56
expressao            : 27 32 40 40 41 41 42 42 43 43 45 53 57 58
field_declaration    : 20
field_list           : 19 20
function_body        : 28
function_call        : 47
function_declaration : 5
lista_comandos       : 1 29 0
param                : 35 36
params               : 33 35
params_opt           : 28
record_access        : 51
record_type_definition : 13
return_statement     : 6
single_type_definition : 9 10
termo                : 44
tipo_retorno_opt     : 28
tipo_specifier       : 17 18 22 37 38
type_declaration_block : 7
type_definition      : 11
type_definition_list : 8 9
var_declaration_list : 14 15 30
var_declarations_opt : 29

Parsing method: LALR

state 0

    (0) S' -> . lista_comandos
    (1) lista_comandos -> . lista_comandos comando
    (2) lista_comandos -> . empty
    (59) empty -> .

    VAR             reduce using rule 59 (empty -> .)
    DEF             reduce using rule 59 (empty -> .)
    RETURN          reduce using rule 59 (empty -> .)
    TYPE            reduce using rule 59 (empty -> .)
    ID              reduce using rule 59 (empty -> .)
    $end            reduce using rule 59 (empty -> .)

    lista_comandos                 shift and go to state 1
    empty                          shift and go to state 2

state 1

    (0) S' -> lista_comandos .
    (1) lista_comandos -> lista_comandos . comando
    (3) comando -> . declaracao_var_block
    (4) comando -> . atribuicao
    (5) comando -> . function_declaration
    (6) comando -> . return_statement
    (7) comando -> . type_declaration_block
    (14) declaracao_var_block -> . VAR var_declaration_list
    (27) atribuicao -> . Variavel ATRIB expressao SEMI
    (28) function_declaration -> . DEF ID LPAREN params_opt RPAREN tipo_retorno_opt function_body
    (32) return_statement -> . RETURN expressao SEMI
    (8) type_declaration_block -> . TYPE type_definition_list
    (49) Variavel -> . ID
    (50) Variavel -> . array_access
    (51) Variavel -> . record_access
    (53) array_access -> . ID LBRACKET expressao RBRACKET
    (52) record_access -> . Variavel DOT ID

    VAR             shift and go to state 9
    DEF             shift and go to state 11
    RETURN          shift and go to state 13
    TYPE            shift and go to state 14
    ID              shift and go to state 12

    comando                        shift and go to state 3
    declaracao_var_block           shift and go to state 4
    atribuicao                     shift and go to state 5
    function_declaration           shift and go to state 6
    return_statement               shift and go to state 7
    type_declaration_block         shift and go to state 8
    Variavel                       shift and go to state 10
    array_access                   shift and go to state 15
    record_access                  shift and go to state 16

state 2

    (2) lista_comandos -> empty .

    VAR             reduce using rule 2 (lista_comandos -> empty .)
    DEF             reduce using rule 2 (lista_comandos -> empty .)
    RETURN          reduce using rule 2 (lista_comandos -> empty .)
    TYPE            reduce using rule 2 (lista_comandos -> empty .)
    ID              reduce using rule 2 (lista_comandos -> empty .)
    $end            reduce using rule 2 (lista_comandos -> empty .)
    END             reduce using rule 2 (lista_comandos -> empty .)


state 3

    (1) lista_comandos -> lista_comandos comando .

    VAR             reduce using rule 1 (lista_comandos -> lista_comandos comando .)
    DEF             reduce using rule 1 (lista_comandos -> lista_comandos comando .)
    RETURN          reduce using rule 1 (lista_comandos -> lista_comandos comando .)
    TYPE            reduce using rule 1 (lista_comandos -> lista_comandos comando .)
    ID              reduce using rule 1 (lista_comandos -> lista_comandos comando .)
    $end            reduce using rule 1 (lista_comandos -> lista_comandos comando .)
    END             reduce using rule 1 (lista_comandos -> lista_comandos comando .)


state 4

    (3) comando -> declaracao_var_block .

    VAR             reduce using rule 3 (comando -> declaracao_var_block .)
    DEF             reduce using rule 3 (comando -> declaracao_var_block .)
    RETURN          reduce using rule 3 (comando -> declaracao_var_block .)
    TYPE            reduce using rule 3 (comando -> declaracao_var_block .)
    ID              reduce using rule 3 (comando -> declaracao_var_block .)
    $end            reduce using rule 3 (comando -> declaracao_var_block .)
    END             reduce using rule 3 (comando -> declaracao_var_block .)


state 5

    (4) comando -> atribuicao .

    VAR             reduce using rule 4 (comando -> atribuicao .)
    DEF             reduce using rule 4 (comando -> atribuicao .)
    RETURN          reduce using rule 4 (comando -> atribuicao .)
    TYPE            reduce using rule 4 (comando -> atribuicao .)
    ID              reduce using rule 4 (comando -> atribuicao .)
    $end            reduce using rule 4 (comando -> atribuicao .)
    END             reduce using rule 4 (comando -> atribuicao .)


state 6

    (5) comando -> function_declaration .

    VAR             reduce using rule 5 (comando -> function_declaration .)
    DEF             reduce using rule 5 (comando -> function_declaration .)
    RETURN          reduce using rule 5 (comando -> function_declaration .)
    TYPE            reduce using rule 5 (comando -> function_declaration .)
    ID              reduce using rule 5 (comando -> function_declaration .)
    $end            reduce using rule 5 (comando -> function_declaration .)
    END             reduce using rule 5 (comando -> function_declaration .)


state 7

    (6) comando -> return_statement .

    VAR             reduce using rule 6 (comando -> return_statement .)
    DEF             reduce using rule 6 (comando -> return_statement .)
    RETURN          reduce using rule 6 (comando -> return_statement .)
    TYPE            reduce using rule 6 (comando -> return_statement .)
    ID              reduce using rule 6 (comando -> return_statement .)
    $end            reduce using rule 6 (comando -> return_statement .)
    END             reduce using rule 6 (comando -> return_statement .)


state 8

    (7) comando -> type_declaration_block .

    VAR             reduce using rule 7 (comando -> type_declaration_block .)
    DEF             reduce using rule 7 (comando -> type_declaration_block .)
    RETURN          reduce using rule 7 (comando -> type_declaration_block .)
    TYPE            reduce using rule 7 (comando -> type_declaration_block .)
    ID              reduce using rule 7 (comando -> type_declaration_block .)
    $end            reduce using rule 7 (comando -> type_declaration_block .)
    END             reduce using rule 7 (comando -> type_declaration_block .)


state 9

    (14) declaracao_var_block -> VAR . var_declaration_list
    (15) var_declaration_list -> . var_declaration_list declaracao_var
    (16) var_declaration_list -> . declaracao_var
    (17) declaracao_var -> . ID COLON tipo_specifier SEMI

    ID              shift and go to state 19

    var_declaration_list           shift and go to state 17
    declaracao_var                 shift and go to state 18

state 10

    (27) atribuicao -> Variavel . ATRIB expressao SEMI
    (52) record_access -> Variavel . DOT ID

    ATRIB           shift and go to state 20
    DOT             shift and go to state 21


state 11

    (28) function_declaration -> DEF . ID LPAREN params_opt RPAREN tipo_retorno_opt function_body

    ID              shift and go to state 22


state 12

    (49) Variavel -> ID .
    (53) array_access -> ID . LBRACKET expressao RBRACKET

    ATRIB           reduce using rule 49 (Variavel -> ID .)
    DOT             reduce using rule 49 (Variavel -> ID .)
    LBRACKET        shift and go to state 23


state 13

    (32) return_statement -> RETURN . expressao SEMI
    (40) expressao -> . expressao PLUS expressao
    (41) expressao -> . expressao MINUS expressao
    (42) expressao -> . expressao TIMES expressao
    (43) expressao -> . expressao DIVIDE expressao
    (44) expressao -> . termo
    (45) termo -> . LPAREN expressao RPAREN
    (46) termo -> . NUMERO
    (47) termo -> . function_call
    (48) termo -> . Variavel
    (54) function_call -> . ID LPAREN args_opt RPAREN
    (49) Variavel -> . ID
    (50) Variavel -> . array_access
    (51) Variavel -> . record_access
    (53) array_access -> . ID LBRACKET expressao RBRACKET
    (52) record_access -> . Variavel DOT ID

    LPAREN          shift and go to state 26
    NUMERO          shift and go to state 27
    ID              shift and go to state 30

    expressao                      shift and go to state 24
    termo                          shift and go to state 25
    function_call                  shift and go to state 28
    Variavel                       shift and go to state 29
    array_access                   shift and go to state 15
    record_access                  shift and go to state 16

state 14

    (8) type_declaration_block -> TYPE . type_definition_list
    (9) type_definition_list -> . type_definition_list single_type_definition
    (10) type_definition_list -> . single_type_definition
    (11) single_type_definition -> . ID EQUAL_TO type_definition SEMI

    ID              shift and go to state 33

    type_definition_list           shift and go to state 31
    single_type_definition         shift and go to state 32

state 15

    (50) Variavel -> array_access .

    ATRIB           reduce using rule 50 (Variavel -> array_access .)
    DOT             reduce using rule 50 (Variavel -> array_access .)
    SEMI            reduce using rule 50 (Variavel -> array_access .)
    PLUS            reduce using rule 50 (Variavel -> array_access .)
    MINUS           reduce using rule 50 (Variavel -> array_access .)
    TIMES           reduce using rule 50 (Variavel -> array_access .)
    DIVIDE          reduce using rule 50 (Variavel -> array_access .)
    RBRACKET        reduce using rule 50 (Variavel -> array_access .)
    RPAREN          reduce using rule 50 (Variavel -> array_access .)
    COMMA           reduce using rule 50 (Variavel -> array_access .)


state 16

    (51) Variavel -> record_access .

    ATRIB           reduce using rule 51 (Variavel -> record_access .)
    DOT             reduce using rule 51 (Variavel -> record_access .)
    SEMI            reduce using rule 51 (Variavel -> record_access .)
    PLUS            reduce using rule 51 (Variavel -> record_access .)
    MINUS           reduce using rule 51 (Variavel -> record_access .)
    TIMES           reduce using rule 51 (Variavel -> record_access .)
    DIVIDE          reduce using rule 51 (Variavel -> record_access .)
    RBRACKET        reduce using rule 51 (Variavel -> record_access .)
    RPAREN          reduce using rule 51 (Variavel -> record_access .)
    COMMA           reduce using rule 51 (Variavel -> record_access .)


state 17

    (14) declaracao_var_block -> VAR var_declaration_list .
    (15) var_declaration_list -> var_declaration_list . declaracao_var
    (17) declaracao_var -> . ID COLON tipo_specifier SEMI

  ! shift/reduce conflict for ID resolved as shift
    VAR             reduce using rule 14 (declaracao_var_block -> VAR var_declaration_list .)
    DEF             reduce using rule 14 (declaracao_var_block -> VAR var_declaration_list .)
    RETURN          reduce using rule 14 (declaracao_var_block -> VAR var_declaration_list .)
    TYPE            reduce using rule 14 (declaracao_var_block -> VAR var_declaration_list .)
    $end            reduce using rule 14 (declaracao_var_block -> VAR var_declaration_list .)
    END             reduce using rule 14 (declaracao_var_block -> VAR var_declaration_list .)
    ID              shift and go to state 19

  ! ID              [ reduce using rule 14 (declaracao_var_block -> VAR var_declaration_list .) ]

    declaracao_var                 shift and go to state 34

state 18

    (16) var_declaration_list -> declaracao_var .

    ID              reduce using rule 16 (var_declaration_list -> declaracao_var .)
    VAR             reduce using rule 16 (var_declaration_list -> declaracao_var .)
    DEF             reduce using rule 16 (var_declaration_list -> declaracao_var .)
    RETURN          reduce using rule 16 (var_declaration_list -> declaracao_var .)
    TYPE            reduce using rule 16 (var_declaration_list -> declaracao_var .)
    $end            reduce using rule 16 (var_declaration_list -> declaracao_var .)
    END             reduce using rule 16 (var_declaration_list -> declaracao_var .)
    BEGIN           reduce using rule 16 (var_declaration_list -> declaracao_var .)


state 19

    (17) declaracao_var -> ID . COLON tipo_specifier SEMI

    COLON           shift and go to state 35


state 20

    (27) atribuicao -> Variavel ATRIB . expressao SEMI
    (40) expressao -> . expressao PLUS expressao
    (41) expressao -> . expressao MINUS expressao
    (42) expressao -> . expressao TIMES expressao
    (43) expressao -> . expressao DIVIDE expressao
    (44) expressao -> . termo
    (45) termo -> . LPAREN expressao RPAREN
    (46) termo -> . NUMERO
    (47) termo -> . function_call
    (48) termo -> . Variavel
    (54) function_call -> . ID LPAREN args_opt RPAREN
    (49) Variavel -> . ID
    (50) Variavel -> . array_access
    (51) Variavel -> . record_access
    (53) array_access -> . ID LBRACKET expressao RBRACKET
    (52) record_access -> . Variavel DOT ID

    LPAREN          shift and go to state 26
    NUMERO          shift and go to state 27
    ID              shift and go to state 30

    Variavel                       shift and go to state 29
    expressao                      shift and go to state 36
    termo                          shift and go to state 25
    function_call                  shift and go to state 28
    array_access                   shift and go to state 15
    record_access                  shift and go to state 16

state 21

    (52) record_access -> Variavel DOT . ID

    ID              shift and go to state 37


state 22

    (28) function_declaration -> DEF ID . LPAREN params_opt RPAREN tipo_retorno_opt function_body

    LPAREN          shift and go to state 38


state 23

    (53) array_access -> ID LBRACKET . expressao RBRACKET
    (40) expressao -> . expressao PLUS expressao
    (41) expressao -> . expressao MINUS expressao
    (42) expressao -> . expressao TIMES expressao
    (43) expressao -> . expressao DIVIDE expressao
    (44) expressao -> . termo
    (45) termo -> . LPAREN expressao RPAREN
    (46) termo -> . NUMERO
    (47) termo -> . function_call
    (48) termo -> . Variavel
    (54) function_call -> . ID LPAREN args_opt RPAREN
    (49) Variavel -> . ID
    (50) Variavel -> . array_access
    (51) Variavel -> . record_access
    (53) array_access -> . ID LBRACKET expressao RBRACKET
    (52) record_access -> . Variavel DOT ID

    LPAREN          shift and go to state 26
    NUMERO          shift and go to state 27
    ID              shift and go to state 30

    expressao                      shift and go to state 39
    termo                          shift and go to state 25
    function_call                  shift and go to state 28
    Variavel                       shift and go to state 29
    array_access                   shift and go to state 15
    record_access                  shift and go to state 16

state 24

    (32) return_statement -> RETURN expressao . SEMI
    (40) expressao -> expressao . PLUS expressao
    (41) expressao -> expressao . MINUS expressao
    (42) expressao -> expressao . TIMES expressao
    (43) expressao -> expressao . DIVIDE expressao

    SEMI            shift and go to state 40
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44


state 25

    (44) expressao -> termo .

    SEMI            reduce using rule 44 (expressao -> termo .)
    PLUS            reduce using rule 44 (expressao -> termo .)
    MINUS           reduce using rule 44 (expressao -> termo .)
    TIMES           reduce using rule 44 (expressao -> termo .)
    DIVIDE          reduce using rule 44 (expressao -> termo .)
    RBRACKET        reduce using rule 44 (expressao -> termo .)
    RPAREN          reduce using rule 44 (expressao -> termo .)
    COMMA           reduce using rule 44 (expressao -> termo .)


state 26

    (45) termo -> LPAREN . expressao RPAREN
    (40) expressao -> . expressao PLUS expressao
    (41) expressao -> . expressao MINUS expressao
    (42) expressao -> . expressao TIMES expressao
    (43) expressao -> . expressao DIVIDE expressao
    (44) expressao -> . termo
    (45) termo -> . LPAREN expressao RPAREN
    (46) termo -> . NUMERO
    (47) termo -> . function_call
    (48) termo -> . Variavel
    (54) function_call -> . ID LPAREN args_opt RPAREN
    (49) Variavel -> . ID
    (50) Variavel -> . array_access
    (51) Variavel -> . record_access
    (53) array_access -> . ID LBRACKET expressao RBRACKET
    (52) record_access -> . Variavel DOT ID

    LPAREN          shift and go to state 26
    NUMERO          shift and go to state 27
    ID              shift and go to state 30

    expressao                      shift and go to state 45
    termo                          shift and go to state 25
    function_call                  shift and go to state 28
    Variavel                       shift and go to state 29
    array_access                   shift and go to state 15
    record_access                  shift and go to state 16

state 27

    (46) termo -> NUMERO .

    SEMI            reduce using rule 46 (termo -> NUMERO .)
    PLUS            reduce using rule 46 (termo -> NUMERO .)
    MINUS           reduce using rule 46 (termo -> NUMERO .)
    TIMES           reduce using rule 46 (termo -> NUMERO .)
    DIVIDE          reduce using rule 46 (termo -> NUMERO .)
    RBRACKET        reduce using rule 46 (termo -> NUMERO .)
    RPAREN          reduce using rule 46 (termo -> NUMERO .)
    COMMA           reduce using rule 46 (termo -> NUMERO .)


state 28

    (47) termo -> function_call .

    SEMI            reduce using rule 47 (termo -> function_call .)
    PLUS            reduce using rule 47 (termo -> function_call .)
    MINUS           reduce using rule 47 (termo -> function_call .)
    TIMES           reduce using rule 47 (termo -> function_call .)
    DIVIDE          reduce using rule 47 (termo -> function_call .)
    RBRACKET        reduce using rule 47 (termo -> function_call .)
    RPAREN          reduce using rule 47 (termo -> function_call .)
    COMMA           reduce using rule 47 (termo -> function_call .)


state 29

    (48) termo -> Variavel .
    (52) record_access -> Variavel . DOT ID

    SEMI            reduce using rule 48 (termo -> Variavel .)
    PLUS            reduce using rule 48 (termo -> Variavel .)
    MINUS           reduce using rule 48 (termo -> Variavel .)
    TIMES           reduce using rule 48 (termo -> Variavel .)
    DIVIDE          reduce using rule 48 (termo -> Variavel .)
    RBRACKET        reduce using rule 48 (termo -> Variavel .)
    RPAREN          reduce using rule 48 (termo -> Variavel .)
    COMMA           reduce using rule 48 (termo -> Variavel .)
    DOT             shift and go to state 21


state 30

    (54) function_call -> ID . LPAREN args_opt RPAREN
    (49) Variavel -> ID .
    (53) array_access -> ID . LBRACKET expressao RBRACKET

    LPAREN          shift and go to state 46
    DOT             reduce using rule 49 (Variavel -> ID .)
    SEMI            reduce using rule 49 (Variavel -> ID .)
    PLUS            reduce using rule 49 (Variavel -> ID .)
    MINUS           reduce using rule 49 (Variavel -> ID .)
    TIMES           reduce using rule 49 (Variavel -> ID .)
    DIVIDE          reduce using rule 49 (Variavel -> ID .)
    RBRACKET        reduce using rule 49 (Variavel -> ID .)
    RPAREN          reduce using rule 49 (Variavel -> ID .)
    COMMA           reduce using rule 49 (Variavel -> ID .)
    LBRACKET        shift and go to state 23


state 31

    (8) type_declaration_block -> TYPE type_definition_list .
    (9) type_definition_list -> type_definition_list . single_type_definition
    (11) single_type_definition -> . ID EQUAL_TO type_definition SEMI

  ! shift/reduce conflict for ID resolved as shift
    VAR             reduce using rule 8 (type_declaration_block -> TYPE type_definition_list .)
    DEF             reduce using rule 8 (type_declaration_block -> TYPE type_definition_list .)
    RETURN          reduce using rule 8 (type_declaration_block -> TYPE type_definition_list .)
    TYPE            reduce using rule 8 (type_declaration_block -> TYPE type_definition_list .)
    $end            reduce using rule 8 (type_declaration_block -> TYPE type_definition_list .)
    END             reduce using rule 8 (type_declaration_block -> TYPE type_definition_list .)
    ID              shift and go to state 33

  ! ID              [ reduce using rule 8 (type_declaration_block -> TYPE type_definition_list .) ]

    single_type_definition         shift and go to state 47

state 32

    (10) type_definition_list -> single_type_definition .

    ID              reduce using rule 10 (type_definition_list -> single_type_definition .)
    VAR             reduce using rule 10 (type_definition_list -> single_type_definition .)
    DEF             reduce using rule 10 (type_definition_list -> single_type_definition .)
    RETURN          reduce using rule 10 (type_definition_list -> single_type_definition .)
    TYPE            reduce using rule 10 (type_definition_list -> single_type_definition .)
    $end            reduce using rule 10 (type_definition_list -> single_type_definition .)
    END             reduce using rule 10 (type_definition_list -> single_type_definition .)


state 33

    (11) single_type_definition -> ID . EQUAL_TO type_definition SEMI

    EQUAL_TO        shift and go to state 48


state 34

    (15) var_declaration_list -> var_declaration_list declaracao_var .

    ID              reduce using rule 15 (var_declaration_list -> var_declaration_list declaracao_var .)
    VAR             reduce using rule 15 (var_declaration_list -> var_declaration_list declaracao_var .)
    DEF             reduce using rule 15 (var_declaration_list -> var_declaration_list declaracao_var .)
    RETURN          reduce using rule 15 (var_declaration_list -> var_declaration_list declaracao_var .)
    TYPE            reduce using rule 15 (var_declaration_list -> var_declaration_list declaracao_var .)
    $end            reduce using rule 15 (var_declaration_list -> var_declaration_list declaracao_var .)
    END             reduce using rule 15 (var_declaration_list -> var_declaration_list declaracao_var .)
    BEGIN           reduce using rule 15 (var_declaration_list -> var_declaration_list declaracao_var .)


state 35

    (17) declaracao_var -> ID COLON . tipo_specifier SEMI
    (23) tipo_specifier -> . INTEGER
    (24) tipo_specifier -> . REAL
    (25) tipo_specifier -> . STRING
    (26) tipo_specifier -> . ID

    INTEGER         shift and go to state 51
    REAL            shift and go to state 52
    STRING          shift and go to state 53
    ID              shift and go to state 49

    tipo_specifier                 shift and go to state 50

state 36

    (27) atribuicao -> Variavel ATRIB expressao . SEMI
    (40) expressao -> expressao . PLUS expressao
    (41) expressao -> expressao . MINUS expressao
    (42) expressao -> expressao . TIMES expressao
    (43) expressao -> expressao . DIVIDE expressao

    SEMI            shift and go to state 54
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44


state 37

    (52) record_access -> Variavel DOT ID .

    ATRIB           reduce using rule 52 (record_access -> Variavel DOT ID .)
    DOT             reduce using rule 52 (record_access -> Variavel DOT ID .)
    SEMI            reduce using rule 52 (record_access -> Variavel DOT ID .)
    PLUS            reduce using rule 52 (record_access -> Variavel DOT ID .)
    MINUS           reduce using rule 52 (record_access -> Variavel DOT ID .)
    TIMES           reduce using rule 52 (record_access -> Variavel DOT ID .)
    DIVIDE          reduce using rule 52 (record_access -> Variavel DOT ID .)
    RBRACKET        reduce using rule 52 (record_access -> Variavel DOT ID .)
    RPAREN          reduce using rule 52 (record_access -> Variavel DOT ID .)
    COMMA           reduce using rule 52 (record_access -> Variavel DOT ID .)


state 38

    (28) function_declaration -> DEF ID LPAREN . params_opt RPAREN tipo_retorno_opt function_body
    (33) params_opt -> . params
    (34) params_opt -> . empty
    (35) params -> . params COMMA param
    (36) params -> . param
    (59) empty -> .
    (37) param -> . ID COLON tipo_specifier

    RPAREN          reduce using rule 59 (empty -> .)
    ID              shift and go to state 55

    params_opt                     shift and go to state 56
    params                         shift and go to state 57
    empty                          shift and go to state 58
    param                          shift and go to state 59

state 39

    (53) array_access -> ID LBRACKET expressao . RBRACKET
    (40) expressao -> expressao . PLUS expressao
    (41) expressao -> expressao . MINUS expressao
    (42) expressao -> expressao . TIMES expressao
    (43) expressao -> expressao . DIVIDE expressao

    RBRACKET        shift and go to state 60
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44


state 40

    (32) return_statement -> RETURN expressao SEMI .

    VAR             reduce using rule 32 (return_statement -> RETURN expressao SEMI .)
    DEF             reduce using rule 32 (return_statement -> RETURN expressao SEMI .)
    RETURN          reduce using rule 32 (return_statement -> RETURN expressao SEMI .)
    TYPE            reduce using rule 32 (return_statement -> RETURN expressao SEMI .)
    ID              reduce using rule 32 (return_statement -> RETURN expressao SEMI .)
    $end            reduce using rule 32 (return_statement -> RETURN expressao SEMI .)
    END             reduce using rule 32 (return_statement -> RETURN expressao SEMI .)


state 41

    (40) expressao -> expressao PLUS . expressao
    (40) expressao -> . expressao PLUS expressao
    (41) expressao -> . expressao MINUS expressao
    (42) expressao -> . expressao TIMES expressao
    (43) expressao -> . expressao DIVIDE expressao
    (44) expressao -> . termo
    (45) termo -> . LPAREN expressao RPAREN
    (46) termo -> . NUMERO
    (47) termo -> . function_call
    (48) termo -> . Variavel
    (54) function_call -> . ID LPAREN args_opt RPAREN
    (49) Variavel -> . ID
    (50) Variavel -> . array_access
    (51) Variavel -> . record_access
    (53) array_access -> . ID LBRACKET expressao RBRACKET
    (52) record_access -> . Variavel DOT ID

    LPAREN          shift and go to state 26
    NUMERO          shift and go to state 27
    ID              shift and go to state 30

    expressao                      shift and go to state 61
    termo                          shift and go to state 25
    function_call                  shift and go to state 28
    Variavel                       shift and go to state 29
    array_access                   shift and go to state 15
    record_access                  shift and go to state 16

state 42

    (41) expressao -> expressao MINUS . expressao
    (40) expressao -> . expressao PLUS expressao
    (41) expressao -> . expressao MINUS expressao
    (42) expressao -> . expressao TIMES expressao
    (43) expressao -> . expressao DIVIDE expressao
    (44) expressao -> . termo
    (45) termo -> . LPAREN expressao RPAREN
    (46) termo -> . NUMERO
    (47) termo -> . function_call
    (48) termo -> . Variavel
    (54) function_call -> . ID LPAREN args_opt RPAREN
    (49) Variavel -> . ID
    (50) Variavel -> . array_access
    (51) Variavel -> . record_access
    (53) array_access -> . ID LBRACKET expressao RBRACKET
    (52) record_access -> . Variavel DOT ID

    LPAREN          shift and go to state 26
    NUMERO          shift and go to state 27
    ID              shift and go to state 30

    expressao                      shift and go to state 62
    termo                          shift and go to state 25
    function_call                  shift and go to state 28
    Variavel                       shift and go to state 29
    array_access                   shift and go to state 15
    record_access                  shift and go to state 16

state 43

    (42) expressao -> expressao TIMES . expressao
    (40) expressao -> . expressao PLUS expressao
    (41) expressao -> . expressao MINUS expressao
    (42) expressao -> . expressao TIMES expressao
    (43) expressao -> . expressao DIVIDE expressao
    (44) expressao -> . termo
    (45) termo -> . LPAREN expressao RPAREN
    (46) termo -> . NUMERO
    (47) termo -> . function_call
    (48) termo -> . Variavel
    (54) function_call -> . ID LPAREN args_opt RPAREN
    (49) Variavel -> . ID
    (50) Variavel -> . array_access
    (51) Variavel -> . record_access
    (53) array_access -> . ID LBRACKET expressao RBRACKET
    (52) record_access -> . Variavel DOT ID

    LPAREN          shift and go to state 26
    NUMERO          shift and go to state 27
    ID              shift and go to state 30

    expressao                      shift and go to state 63
    termo                          shift and go to state 25
    function_call                  shift and go to state 28
    Variavel                       shift and go to state 29
    array_access                   shift and go to state 15
    record_access                  shift and go to state 16

state 44

    (43) expressao -> expressao DIVIDE . expressao
    (40) expressao -> . expressao PLUS expressao
    (41) expressao -> . expressao MINUS expressao
    (42) expressao -> . expressao TIMES expressao
    (43) expressao -> . expressao DIVIDE expressao
    (44) expressao -> . termo
    (45) termo -> . LPAREN expressao RPAREN
    (46) termo -> . NUMERO
    (47) termo -> . function_call
    (48) termo -> . Variavel
    (54) function_call -> . ID LPAREN args_opt RPAREN
    (49) Variavel -> . ID
    (50) Variavel -> . array_access
    (51) Variavel -> . record_access
    (53) array_access -> . ID LBRACKET expressao RBRACKET
    (52) record_access -> . Variavel DOT ID

    LPAREN          shift and go to state 26
    NUMERO          shift and go to state 27
    ID              shift and go to state 30

    expressao                      shift and go to state 64
    termo                          shift and go to state 25
    function_call                  shift and go to state 28
    Variavel                       shift and go to state 29
    array_access                   shift and go to state 15
    record_access                  shift and go to state 16

state 45

    (45) termo -> LPAREN expressao . RPAREN
    (40) expressao -> expressao . PLUS expressao
    (41) expressao -> expressao . MINUS expressao
    (42) expressao -> expressao . TIMES expressao
    (43) expressao -> expressao . DIVIDE expressao

    RPAREN          shift and go to state 65
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44


state 46

    (54) function_call -> ID LPAREN . args_opt RPAREN
    (55) args_opt -> . args
    (56) args_opt -> . empty
    (57) args -> . args COMMA expressao
    (58) args -> . expressao
    (59) empty -> .
    (40) expressao -> . expressao PLUS expressao
    (41) expressao -> . expressao MINUS expressao
    (42) expressao -> . expressao TIMES expressao
    (43) expressao -> . expressao DIVIDE expressao
    (44) expressao -> . termo
    (45) termo -> . LPAREN expressao RPAREN
    (46) termo -> . NUMERO
    (47) termo -> . function_call
    (48) termo -> . Variavel
    (54) function_call -> . ID LPAREN args_opt RPAREN
    (49) Variavel -> . ID
    (50) Variavel -> . array_access
    (51) Variavel -> . record_access
    (53) array_access -> . ID LBRACKET expressao RBRACKET
    (52) record_access -> . Variavel DOT ID

    RPAREN          reduce using rule 59 (empty -> .)
    LPAREN          shift and go to state 26
    NUMERO          shift and go to state 27
    ID              shift and go to state 30

    args_opt                       shift and go to state 66
    args                           shift and go to state 67
    empty                          shift and go to state 68
    expressao                      shift and go to state 69
    termo                          shift and go to state 25
    function_call                  shift and go to state 28
    Variavel                       shift and go to state 29
    array_access                   shift and go to state 15
    record_access                  shift and go to state 16

state 47

    (9) type_definition_list -> type_definition_list single_type_definition .

    ID              reduce using rule 9 (type_definition_list -> type_definition_list single_type_definition .)
    VAR             reduce using rule 9 (type_definition_list -> type_definition_list single_type_definition .)
    DEF             reduce using rule 9 (type_definition_list -> type_definition_list single_type_definition .)
    RETURN          reduce using rule 9 (type_definition_list -> type_definition_list single_type_definition .)
    TYPE            reduce using rule 9 (type_definition_list -> type_definition_list single_type_definition .)
    $end            reduce using rule 9 (type_definition_list -> type_definition_list single_type_definition .)
    END             reduce using rule 9 (type_definition_list -> type_definition_list single_type_definition .)


state 48

    (11) single_type_definition -> ID EQUAL_TO . type_definition SEMI
    (12) type_definition -> . array_type_definition
    (13) type_definition -> . record_type_definition
    (18) array_type_definition -> . ARRAY LBRACKET NUMERO RBRACKET OF tipo_specifier
    (19) record_type_definition -> . RECORD field_list END SEMI

    ARRAY           shift and go to state 73
    RECORD          shift and go to state 74

    type_definition                shift and go to state 70
    array_type_definition          shift and go to state 71
    record_type_definition         shift and go to state 72

state 49

    (26) tipo_specifier -> ID .

    SEMI            reduce using rule 26 (tipo_specifier -> ID .)
    COMMA           reduce using rule 26 (tipo_specifier -> ID .)
    RPAREN          reduce using rule 26 (tipo_specifier -> ID .)
    VAR             reduce using rule 26 (tipo_specifier -> ID .)
    BEGIN           reduce using rule 26 (tipo_specifier -> ID .)


state 50

    (17) declaracao_var -> ID COLON tipo_specifier . SEMI

    SEMI            shift and go to state 75


state 51

    (23) tipo_specifier -> INTEGER .

    SEMI            reduce using rule 23 (tipo_specifier -> INTEGER .)
    COMMA           reduce using rule 23 (tipo_specifier -> INTEGER .)
    RPAREN          reduce using rule 23 (tipo_specifier -> INTEGER .)
    VAR             reduce using rule 23 (tipo_specifier -> INTEGER .)
    BEGIN           reduce using rule 23 (tipo_specifier -> INTEGER .)


state 52

    (24) tipo_specifier -> REAL .

    SEMI            reduce using rule 24 (tipo_specifier -> REAL .)
    COMMA           reduce using rule 24 (tipo_specifier -> REAL .)
    RPAREN          reduce using rule 24 (tipo_specifier -> REAL .)
    VAR             reduce using rule 24 (tipo_specifier -> REAL .)
    BEGIN           reduce using rule 24 (tipo_specifier -> REAL .)


state 53

    (25) tipo_specifier -> STRING .

    SEMI            reduce using rule 25 (tipo_specifier -> STRING .)
    COMMA           reduce using rule 25 (tipo_specifier -> STRING .)
    RPAREN          reduce using rule 25 (tipo_specifier -> STRING .)
    VAR             reduce using rule 25 (tipo_specifier -> STRING .)
    BEGIN           reduce using rule 25 (tipo_specifier -> STRING .)


state 54

    (27) atribuicao -> Variavel ATRIB expressao SEMI .

    VAR             reduce using rule 27 (atribuicao -> Variavel ATRIB expressao SEMI .)
    DEF             reduce using rule 27 (atribuicao -> Variavel ATRIB expressao SEMI .)
    RETURN          reduce using rule 27 (atribuicao -> Variavel ATRIB expressao SEMI .)
    TYPE            reduce using rule 27 (atribuicao -> Variavel ATRIB expressao SEMI .)
    ID              reduce using rule 27 (atribuicao -> Variavel ATRIB expressao SEMI .)
    $end            reduce using rule 27 (atribuicao -> Variavel ATRIB expressao SEMI .)
    END             reduce using rule 27 (atribuicao -> Variavel ATRIB expressao SEMI .)


state 55

    (37) param -> ID . COLON tipo_specifier

    COLON           shift and go to state 76


state 56

    (28) function_declaration -> DEF ID LPAREN params_opt . RPAREN tipo_retorno_opt function_body

    RPAREN          shift and go to state 77


state 57

    (33) params_opt -> params .
    (35) params -> params . COMMA param

    RPAREN          reduce using rule 33 (params_opt -> params .)
    COMMA           shift and go to state 78


state 58

    (34) params_opt -> empty .

    RPAREN          reduce using rule 34 (params_opt -> empty .)


state 59

    (36) params -> param .

    COMMA           reduce using rule 36 (params -> param .)
    RPAREN          reduce using rule 36 (params -> param .)


state 60

    (53) array_access -> ID LBRACKET expressao RBRACKET .

    ATRIB           reduce using rule 53 (array_access -> ID LBRACKET expressao RBRACKET .)
    DOT             reduce using rule 53 (array_access -> ID LBRACKET expressao RBRACKET .)
    SEMI            reduce using rule 53 (array_access -> ID LBRACKET expressao RBRACKET .)
    PLUS            reduce using rule 53 (array_access -> ID LBRACKET expressao RBRACKET .)
    MINUS           reduce using rule 53 (array_access -> ID LBRACKET expressao RBRACKET .)
    TIMES           reduce using rule 53 (array_access -> ID LBRACKET expressao RBRACKET .)
    DIVIDE          reduce using rule 53 (array_access -> ID LBRACKET expressao RBRACKET .)
    RBRACKET        reduce using rule 53 (array_access -> ID LBRACKET expressao RBRACKET .)
    RPAREN          reduce using rule 53 (array_access -> ID LBRACKET expressao RBRACKET .)
    COMMA           reduce using rule 53 (array_access -> ID LBRACKET expressao RBRACKET .)


state 61

    (40) expressao -> expressao PLUS expressao .
    (40) expressao -> expressao . PLUS expressao
    (41) expressao -> expressao . MINUS expressao
    (42) expressao -> expressao . TIMES expressao
    (43) expressao -> expressao . DIVIDE expressao

    SEMI            reduce using rule 40 (expressao -> expressao PLUS expressao .)
    PLUS            reduce using rule 40 (expressao -> expressao PLUS expressao .)
    MINUS           reduce using rule 40 (expressao -> expressao PLUS expressao .)
    RBRACKET        reduce using rule 40 (expressao -> expressao PLUS expressao .)
    RPAREN          reduce using rule 40 (expressao -> expressao PLUS expressao .)
    COMMA           reduce using rule 40 (expressao -> expressao PLUS expressao .)
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44

  ! TIMES           [ reduce using rule 40 (expressao -> expressao PLUS expressao .) ]
  ! DIVIDE          [ reduce using rule 40 (expressao -> expressao PLUS expressao .) ]
  ! PLUS            [ shift and go to state 41 ]
  ! MINUS           [ shift and go to state 42 ]


state 62

    (41) expressao -> expressao MINUS expressao .
    (40) expressao -> expressao . PLUS expressao
    (41) expressao -> expressao . MINUS expressao
    (42) expressao -> expressao . TIMES expressao
    (43) expressao -> expressao . DIVIDE expressao

    SEMI            reduce using rule 41 (expressao -> expressao MINUS expressao .)
    PLUS            reduce using rule 41 (expressao -> expressao MINUS expressao .)
    MINUS           reduce using rule 41 (expressao -> expressao MINUS expressao .)
    RBRACKET        reduce using rule 41 (expressao -> expressao MINUS expressao .)
    RPAREN          reduce using rule 41 (expressao -> expressao MINUS expressao .)
    COMMA           reduce using rule 41 (expressao -> expressao MINUS expressao .)
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44

  ! TIMES           [ reduce using rule 41 (expressao -> expressao MINUS expressao .) ]
  ! DIVIDE          [ reduce using rule 41 (expressao -> expressao MINUS expressao .) ]
  ! PLUS            [ shift and go to state 41 ]
  ! MINUS           [ shift and go to state 42 ]


state 63

    (42) expressao -> expressao TIMES expressao .
    (40) expressao -> expressao . PLUS expressao
    (41) expressao -> expressao . MINUS expressao
    (42) expressao -> expressao . TIMES expressao
    (43) expressao -> expressao . DIVIDE expressao

    SEMI            reduce using rule 42 (expressao -> expressao TIMES expressao .)
    PLUS            reduce using rule 42 (expressao -> expressao TIMES expressao .)
    MINUS           reduce using rule 42 (expressao -> expressao TIMES expressao .)
    TIMES           reduce using rule 42 (expressao -> expressao TIMES expressao .)
    DIVIDE          reduce using rule 42 (expressao -> expressao TIMES expressao .)
    RBRACKET        reduce using rule 42 (expressao -> expressao TIMES expressao .)
    RPAREN          reduce using rule 42 (expressao -> expressao TIMES expressao .)
    COMMA           reduce using rule 42 (expressao -> expressao TIMES expressao .)

  ! PLUS            [ shift and go to state 41 ]
  ! MINUS           [ shift and go to state 42 ]
  ! TIMES           [ shift and go to state 43 ]
  ! DIVIDE          [ shift and go to state 44 ]


state 64

    (43) expressao -> expressao DIVIDE expressao .
    (40) expressao -> expressao . PLUS expressao
    (41) expressao -> expressao . MINUS expressao
    (42) expressao -> expressao . TIMES expressao
    (43) expressao -> expressao . DIVIDE expressao

    SEMI            reduce using rule 43 (expressao -> expressao DIVIDE expressao .)
    PLUS            reduce using rule 43 (expressao -> expressao DIVIDE expressao .)
    MINUS           reduce using rule 43 (expressao -> expressao DIVIDE expressao .)
    TIMES           reduce using rule 43 (expressao -> expressao DIVIDE expressao .)
    DIVIDE          reduce using rule 43 (expressao -> expressao DIVIDE expressao .)
    RBRACKET        reduce using rule 43 (expressao -> expressao DIVIDE expressao .)
    RPAREN          reduce using rule 43 (expressao -> expressao DIVIDE expressao .)
    COMMA           reduce using rule 43 (expressao -> expressao DIVIDE expressao .)

  ! PLUS            [ shift and go to state 41 ]
  ! MINUS           [ shift and go to state 42 ]
  ! TIMES           [ shift and go to state 43 ]
  ! DIVIDE          [ shift and go to state 44 ]


state 65

    (45) termo -> LPAREN expressao RPAREN .

    SEMI            reduce using rule 45 (termo -> LPAREN expressao RPAREN .)
    PLUS            reduce using rule 45 (termo -> LPAREN expressao RPAREN .)
    MINUS           reduce using rule 45 (termo -> LPAREN expressao RPAREN .)
    TIMES           reduce using rule 45 (termo -> LPAREN expressao RPAREN .)
    DIVIDE          reduce using rule 45 (termo -> LPAREN expressao RPAREN .)
    RBRACKET        reduce using rule 45 (termo -> LPAREN expressao RPAREN .)
    RPAREN          reduce using rule 45 (termo -> LPAREN expressao RPAREN .)
    COMMA           reduce using rule 45 (termo -> LPAREN expressao RPAREN .)


state 66

    (54) function_call -> ID LPAREN args_opt . RPAREN

    RPAREN          shift and go to state 79


state 67

    (55) args_opt -> args .
    (57) args -> args . COMMA expressao

    RPAREN          reduce using rule 55 (args_opt -> args .)
    COMMA           shift and go to state 80


state 68

    (56) args_opt -> empty .

    RPAREN          reduce using rule 56 (args_opt -> empty .)


state 69

    (58) args -> expressao .
    (40) expressao -> expressao . PLUS expressao
    (41) expressao -> expressao . MINUS expressao
    (42) expressao -> expressao . TIMES expressao
    (43) expressao -> expressao . DIVIDE expressao

    COMMA           reduce using rule 58 (args -> expressao .)
    RPAREN          reduce using rule 58 (args -> expressao .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44


state 70

    (11) single_type_definition -> ID EQUAL_TO type_definition . SEMI

    SEMI            shift and go to state 81


state 71

    (12) type_definition -> array_type_definition .

    SEMI            reduce using rule 12 (type_definition -> array_type_definition .)


state 72

    (13) type_definition -> record_type_definition .

    SEMI            reduce using rule 13 (type_definition -> record_type_definition .)


state 73

    (18) array_type_definition -> ARRAY . LBRACKET NUMERO RBRACKET OF tipo_specifier

    LBRACKET        shift and go to state 82


state 74

    (19) record_type_definition -> RECORD . field_list END SEMI
    (20) field_list -> . field_list field_declaration
    (21) field_list -> . empty
    (59) empty -> .

    END             reduce using rule 59 (empty -> .)
    ID              reduce using rule 59 (empty -> .)

    field_list                     shift and go to state 83
    empty                          shift and go to state 84

state 75

    (17) declaracao_var -> ID COLON tipo_specifier SEMI .

    ID              reduce using rule 17 (declaracao_var -> ID COLON tipo_specifier SEMI .)
    VAR             reduce using rule 17 (declaracao_var -> ID COLON tipo_specifier SEMI .)
    DEF             reduce using rule 17 (declaracao_var -> ID COLON tipo_specifier SEMI .)
    RETURN          reduce using rule 17 (declaracao_var -> ID COLON tipo_specifier SEMI .)
    TYPE            reduce using rule 17 (declaracao_var -> ID COLON tipo_specifier SEMI .)
    $end            reduce using rule 17 (declaracao_var -> ID COLON tipo_specifier SEMI .)
    END             reduce using rule 17 (declaracao_var -> ID COLON tipo_specifier SEMI .)
    BEGIN           reduce using rule 17 (declaracao_var -> ID COLON tipo_specifier SEMI .)


state 76

    (37) param -> ID COLON . tipo_specifier
    (23) tipo_specifier -> . INTEGER
    (24) tipo_specifier -> . REAL
    (25) tipo_specifier -> . STRING
    (26) tipo_specifier -> . ID

    INTEGER         shift and go to state 51
    REAL            shift and go to state 52
    STRING          shift and go to state 53
    ID              shift and go to state 49

    tipo_specifier                 shift and go to state 85

state 77

    (28) function_declaration -> DEF ID LPAREN params_opt RPAREN . tipo_retorno_opt function_body
    (38) tipo_retorno_opt -> . COLON COLON tipo_specifier
    (39) tipo_retorno_opt -> . empty
    (59) empty -> .

    COLON           shift and go to state 87
    VAR             reduce using rule 59 (empty -> .)
    BEGIN           reduce using rule 59 (empty -> .)

    tipo_retorno_opt               shift and go to state 86
    empty                          shift and go to state 88

state 78

    (35) params -> params COMMA . param
    (37) param -> . ID COLON tipo_specifier

    ID              shift and go to state 55

    param                          shift and go to state 89

state 79

    (54) function_call -> ID LPAREN args_opt RPAREN .

    SEMI            reduce using rule 54 (function_call -> ID LPAREN args_opt RPAREN .)
    PLUS            reduce using rule 54 (function_call -> ID LPAREN args_opt RPAREN .)
    MINUS           reduce using rule 54 (function_call -> ID LPAREN args_opt RPAREN .)
    TIMES           reduce using rule 54 (function_call -> ID LPAREN args_opt RPAREN .)
    DIVIDE          reduce using rule 54 (function_call -> ID LPAREN args_opt RPAREN .)
    RBRACKET        reduce using rule 54 (function_call -> ID LPAREN args_opt RPAREN .)
    RPAREN          reduce using rule 54 (function_call -> ID LPAREN args_opt RPAREN .)
    COMMA           reduce using rule 54 (function_call -> ID LPAREN args_opt RPAREN .)


state 80

    (57) args -> args COMMA . expressao
    (40) expressao -> . expressao PLUS expressao
    (41) expressao -> . expressao MINUS expressao
    (42) expressao -> . expressao TIMES expressao
    (43) expressao -> . expressao DIVIDE expressao
    (44) expressao -> . termo
    (45) termo -> . LPAREN expressao RPAREN
    (46) termo -> . NUMERO
    (47) termo -> . function_call
    (48) termo -> . Variavel
    (54) function_call -> . ID LPAREN args_opt RPAREN
    (49) Variavel -> . ID
    (50) Variavel -> . array_access
    (51) Variavel -> . record_access
    (53) array_access -> . ID LBRACKET expressao RBRACKET
    (52) record_access -> . Variavel DOT ID

    LPAREN          shift and go to state 26
    NUMERO          shift and go to state 27
    ID              shift and go to state 30

    expressao                      shift and go to state 90
    termo                          shift and go to state 25
    function_call                  shift and go to state 28
    Variavel                       shift and go to state 29
    array_access                   shift and go to state 15
    record_access                  shift and go to state 16

state 81

    (11) single_type_definition -> ID EQUAL_TO type_definition SEMI .

    ID              reduce using rule 11 (single_type_definition -> ID EQUAL_TO type_definition SEMI .)
    VAR             reduce using rule 11 (single_type_definition -> ID EQUAL_TO type_definition SEMI .)
    DEF             reduce using rule 11 (single_type_definition -> ID EQUAL_TO type_definition SEMI .)
    RETURN          reduce using rule 11 (single_type_definition -> ID EQUAL_TO type_definition SEMI .)
    TYPE            reduce using rule 11 (single_type_definition -> ID EQUAL_TO type_definition SEMI .)
    $end            reduce using rule 11 (single_type_definition -> ID EQUAL_TO type_definition SEMI .)
    END             reduce using rule 11 (single_type_definition -> ID EQUAL_TO type_definition SEMI .)


state 82

    (18) array_type_definition -> ARRAY LBRACKET . NUMERO RBRACKET OF tipo_specifier

    NUMERO          shift and go to state 91


state 83

    (19) record_type_definition -> RECORD field_list . END SEMI
    (20) field_list -> field_list . field_declaration
    (22) field_declaration -> . ID COLON tipo_specifier SEMI

    END             shift and go to state 92
    ID              shift and go to state 94

    field_declaration              shift and go to state 93

state 84

    (21) field_list -> empty .

    END             reduce using rule 21 (field_list -> empty .)
    ID              reduce using rule 21 (field_list -> empty .)


state 85

    (37) param -> ID COLON tipo_specifier .

    COMMA           reduce using rule 37 (param -> ID COLON tipo_specifier .)
    RPAREN          reduce using rule 37 (param -> ID COLON tipo_specifier .)


state 86

    (28) function_declaration -> DEF ID LPAREN params_opt RPAREN tipo_retorno_opt . function_body
    (29) function_body -> . var_declarations_opt BEGIN lista_comandos END SEMI
    (30) var_declarations_opt -> . VAR var_declaration_list
    (31) var_declarations_opt -> . empty
    (59) empty -> .

    VAR             shift and go to state 97
    BEGIN           reduce using rule 59 (empty -> .)

    function_body                  shift and go to state 95
    var_declarations_opt           shift and go to state 96
    empty                          shift and go to state 98

state 87

    (38) tipo_retorno_opt -> COLON . COLON tipo_specifier

    COLON           shift and go to state 99


state 88

    (39) tipo_retorno_opt -> empty .

    VAR             reduce using rule 39 (tipo_retorno_opt -> empty .)
    BEGIN           reduce using rule 39 (tipo_retorno_opt -> empty .)


state 89

    (35) params -> params COMMA param .

    COMMA           reduce using rule 35 (params -> params COMMA param .)
    RPAREN          reduce using rule 35 (params -> params COMMA param .)


state 90

    (57) args -> args COMMA expressao .
    (40) expressao -> expressao . PLUS expressao
    (41) expressao -> expressao . MINUS expressao
    (42) expressao -> expressao . TIMES expressao
    (43) expressao -> expressao . DIVIDE expressao

    COMMA           reduce using rule 57 (args -> args COMMA expressao .)
    RPAREN          reduce using rule 57 (args -> args COMMA expressao .)
    PLUS            shift and go to state 41
    MINUS           shift and go to state 42
    TIMES           shift and go to state 43
    DIVIDE          shift and go to state 44


state 91

    (18) array_type_definition -> ARRAY LBRACKET NUMERO . RBRACKET OF tipo_specifier

    RBRACKET        shift and go to state 100


state 92

    (19) record_type_definition -> RECORD field_list END . SEMI

    SEMI            shift and go to state 101


state 93

    (20) field_list -> field_list field_declaration .

    END             reduce using rule 20 (field_list -> field_list field_declaration .)
    ID              reduce using rule 20 (field_list -> field_list field_declaration .)


state 94

    (22) field_declaration -> ID . COLON tipo_specifier SEMI

    COLON           shift and go to state 102


state 95

    (28) function_declaration -> DEF ID LPAREN params_opt RPAREN tipo_retorno_opt function_body .

    VAR             reduce using rule 28 (function_declaration -> DEF ID LPAREN params_opt RPAREN tipo_retorno_opt function_body .)
    DEF             reduce using rule 28 (function_declaration -> DEF ID LPAREN params_opt RPAREN tipo_retorno_opt function_body .)
    RETURN          reduce using rule 28 (function_declaration -> DEF ID LPAREN params_opt RPAREN tipo_retorno_opt function_body .)
    TYPE            reduce using rule 28 (function_declaration -> DEF ID LPAREN params_opt RPAREN tipo_retorno_opt function_body .)
    ID              reduce using rule 28 (function_declaration -> DEF ID LPAREN params_opt RPAREN tipo_retorno_opt function_body .)
    $end            reduce using rule 28 (function_declaration -> DEF ID LPAREN params_opt RPAREN tipo_retorno_opt function_body .)
    END             reduce using rule 28 (function_declaration -> DEF ID LPAREN params_opt RPAREN tipo_retorno_opt function_body .)


state 96

    (29) function_body -> var_declarations_opt . BEGIN lista_comandos END SEMI

    BEGIN           shift and go to state 103


state 97

    (30) var_declarations_opt -> VAR . var_declaration_list
    (15) var_declaration_list -> . var_declaration_list declaracao_var
    (16) var_declaration_list -> . declaracao_var
    (17) declaracao_var -> . ID COLON tipo_specifier SEMI

    ID              shift and go to state 19

    var_declaration_list           shift and go to state 104
    declaracao_var                 shift and go to state 18

state 98

    (31) var_declarations_opt -> empty .

    BEGIN           reduce using rule 31 (var_declarations_opt -> empty .)


state 99

    (38) tipo_retorno_opt -> COLON COLON . tipo_specifier
    (23) tipo_specifier -> . INTEGER
    (24) tipo_specifier -> . REAL
    (25) tipo_specifier -> . STRING
    (26) tipo_specifier -> . ID

    INTEGER         shift and go to state 51
    REAL            shift and go to state 52
    STRING          shift and go to state 53
    ID              shift and go to state 49

    tipo_specifier                 shift and go to state 105

state 100

    (18) array_type_definition -> ARRAY LBRACKET NUMERO RBRACKET . OF tipo_specifier

    OF              shift and go to state 106


state 101

    (19) record_type_definition -> RECORD field_list END SEMI .

    SEMI            reduce using rule 19 (record_type_definition -> RECORD field_list END SEMI .)


state 102

    (22) field_declaration -> ID COLON . tipo_specifier SEMI
    (23) tipo_specifier -> . INTEGER
    (24) tipo_specifier -> . REAL
    (25) tipo_specifier -> . STRING
    (26) tipo_specifier -> . ID

    INTEGER         shift and go to state 51
    REAL            shift and go to state 52
    STRING          shift and go to state 53
    ID              shift and go to state 49

    tipo_specifier                 shift and go to state 107

state 103

    (29) function_body -> var_declarations_opt BEGIN . lista_comandos END SEMI
    (1) lista_comandos -> . lista_comandos comando
    (2) lista_comandos -> . empty
    (59) empty -> .

    END             reduce using rule 59 (empty -> .)
    VAR             reduce using rule 59 (empty -> .)
    DEF             reduce using rule 59 (empty -> .)
    RETURN          reduce using rule 59 (empty -> .)
    TYPE            reduce using rule 59 (empty -> .)
    ID              reduce using rule 59 (empty -> .)

    lista_comandos                 shift and go to state 108
    empty                          shift and go to state 2

state 104

    (30) var_declarations_opt -> VAR var_declaration_list .
    (15) var_declaration_list -> var_declaration_list . declaracao_var
    (17) declaracao_var -> . ID COLON tipo_specifier SEMI

    BEGIN           reduce using rule 30 (var_declarations_opt -> VAR var_declaration_list .)
    ID              shift and go to state 19

    declaracao_var                 shift and go to state 34

state 105

    (38) tipo_retorno_opt -> COLON COLON tipo_specifier .

    VAR             reduce using rule 38 (tipo_retorno_opt -> COLON COLON tipo_specifier .)
    BEGIN           reduce using rule 38 (tipo_retorno_opt -> COLON COLON tipo_specifier .)


state 106

    (18) array_type_definition -> ARRAY LBRACKET NUMERO RBRACKET OF . tipo_specifier
    (23) tipo_specifier -> . INTEGER
    (24) tipo_specifier -> . REAL
    (25) tipo_specifier -> . STRING
    (26) tipo_specifier -> . ID

    INTEGER         shift and go to state 51
    REAL            shift and go to state 52
    STRING          shift and go to state 53
    ID              shift and go to state 49

    tipo_specifier                 shift and go to state 109

state 107

    (22) field_declaration -> ID COLON tipo_specifier . SEMI

    SEMI            shift and go to state 110


state 108

    (29) function_body -> var_declarations_opt BEGIN lista_comandos . END SEMI
    (1) lista_comandos -> lista_comandos . comando
    (3) comando -> . declaracao_var_block
    (4) comando -> . atribuicao
    (5) comando -> . function_declaration
    (6) comando -> . return_statement
    (7) comando -> . type_declaration_block
    (14) declaracao_var_block -> . VAR var_declaration_list
    (27) atribuicao -> . Variavel ATRIB expressao SEMI
    (28) function_declaration -> . DEF ID LPAREN params_opt RPAREN tipo_retorno_opt function_body
    (32) return_statement -> . RETURN expressao SEMI
    (8) type_declaration_block -> . TYPE type_definition_list
    (49) Variavel -> . ID
    (50) Variavel -> . array_access
    (51) Variavel -> . record_access
    (53) array_access -> . ID LBRACKET expressao RBRACKET
    (52) record_access -> . Variavel DOT ID

    END             shift and go to state 111
    VAR             shift and go to state 9
    DEF             shift and go to state 11
    RETURN          shift and go to state 13
    TYPE            shift and go to state 14
    ID              shift and go to state 12

    comando                        shift and go to state 3
    declaracao_var_block           shift and go to state 4
    atribuicao                     shift and go to state 5
    function_declaration           shift and go to state 6
    return_statement               shift and go to state 7
    type_declaration_block         shift and go to state 8
    Variavel                       shift and go to state 10
    array_access                   shift and go to state 15
    record_access                  shift and go to state 16

state 109

    (18) array_type_definition -> ARRAY LBRACKET NUMERO RBRACKET OF tipo_specifier .

    SEMI            reduce using rule 18 (array_type_definition -> ARRAY LBRACKET NUMERO RBRACKET OF tipo_specifier .)


state 110

    (22) field_declaration -> ID COLON tipo_specifier SEMI .

    END             reduce using rule 22 (field_declaration -> ID COLON tipo_specifier SEMI .)
    ID              reduce using rule 22 (field_declaration -> ID COLON tipo_specifier SEMI .)


state 111

    (29) function_body -> var_declarations_opt BEGIN lista_comandos END . SEMI

    SEMI            shift and go to state 112


state 112

    (29) function_body -> var_declarations_opt BEGIN lista_comandos END SEMI .

    VAR             reduce using rule 29 (function_body -> var_declarations_opt BEGIN lista_comandos END SEMI .)
    DEF             reduce using rule 29 (function_body -> var_declarations_opt BEGIN lista_comandos END SEMI .)
    RETURN          reduce using rule 29 (function_body -> var_declarations_opt BEGIN lista_comandos END SEMI .)
    TYPE            reduce using rule 29 (function_body -> var_declarations_opt BEGIN lista_comandos END SEMI .)
    ID              reduce using rule 29 (function_body -> var_declarations_opt BEGIN lista_comandos END SEMI .)
    $end            reduce using rule 29 (function_body -> var_declarations_opt BEGIN lista_comandos END SEMI .)
    END             reduce using rule 29 (function_body -> var_declarations_opt BEGIN lista_comandos END SEMI .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for ID in state 17 resolved as shift
WARNING: shift/reduce conflict for ID in state 31 resolved as shift
