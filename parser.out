Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    CONST
    CONST_VALOR
    DO
    ELSE
    EQUAL
    GREATER_THAN
    GREATER_THAN_OR_EQUAL
    IF
    LESS_THAN
    LESS_THAN_OR_EQUAL
    NOT_EQUAL_TO
    READ
    THEN
    WHILE
    WRITE

Grammar

Rule 0     S' -> programa
Rule 1     programa -> lista_declaracoes corpo_principal
Rule 2     lista_declaracoes -> lista_declaracoes declaracao
Rule 3     lista_declaracoes -> empty
Rule 4     declaracao -> type_declaration_block
Rule 5     declaracao -> var_declaration_block
Rule 6     declaracao -> function_declaration
Rule 7     corpo_principal -> BEGIN lista_comandos END SEMI
Rule 8     lista_comandos -> lista_comandos comando
Rule 9     lista_comandos -> empty
Rule 10    comando -> atribuicao
Rule 11    comando -> return_statement
Rule 12    comando -> function_call SEMI
Rule 13    type_declaration_block -> TYPE type_definition_list
Rule 14    type_definition_list -> type_definition_list single_type_definition
Rule 15    type_definition_list -> single_type_definition
Rule 16    single_type_definition -> ID EQUAL_TO type_definition SEMI
Rule 17    type_definition -> array_type_definition
Rule 18    type_definition -> record_type_definition
Rule 19    array_type_definition -> ARRAY LBRACKET NUMERO RBRACKET OF tipo_specifier
Rule 20    record_type_definition -> RECORD field_list END
Rule 21    field_list -> field_list field_declaration
Rule 22    field_list -> empty
Rule 23    field_declaration -> ID COLON tipo_specifier SEMI
Rule 24    var_declaration_block -> VAR var_declaration_list
Rule 25    var_declaration_list -> var_declaration_list declaracao_var
Rule 26    var_declaration_list -> declaracao_var
Rule 27    declaracao_var -> ID COLON tipo_specifier SEMI
Rule 28    tipo_specifier -> INTEGER
Rule 29    tipo_specifier -> REAL
Rule 30    tipo_specifier -> STRING
Rule 31    tipo_specifier -> ID
Rule 32    atribuicao -> lvalue ATRIB expressao SEMI
Rule 33    lvalue -> ID
Rule 34    lvalue -> array_access
Rule 35    lvalue -> record_access
Rule 36    array_access -> ID LBRACKET expressao RBRACKET
Rule 37    record_access -> lvalue DOT ID
Rule 38    function_declaration -> DEF ID LPAREN params_opt RPAREN tipo_retorno_opt function_body
Rule 39    var_declarations_opt -> var_declaration_block
Rule 40    var_declarations_opt -> empty
Rule 41    function_body -> var_declarations_opt BEGIN lista_comandos END SEMI
Rule 42    return_statement -> RETURN expressao SEMI
Rule 43    params_opt -> params
Rule 44    params_opt -> empty
Rule 45    params -> params COMMA param
Rule 46    params -> param
Rule 47    param -> ID COLON tipo_specifier
Rule 48    tipo_retorno_opt -> COLON COLON tipo_specifier
Rule 49    tipo_retorno_opt -> empty
Rule 50    expressao -> expressao PLUS expressao
Rule 51    expressao -> expressao MINUS expressao
Rule 52    expressao -> expressao TIMES expressao
Rule 53    expressao -> expressao DIVIDE expressao
Rule 54    expressao -> termo
Rule 55    termo -> LPAREN expressao RPAREN
Rule 56    termo -> NUMERO
Rule 57    termo -> function_call
Rule 58    termo -> lvalue
Rule 59    function_call -> ID LPAREN args_opt RPAREN
Rule 60    args_opt -> args
Rule 61    args_opt -> empty
Rule 62    args -> args COMMA expressao
Rule 63    args -> expressao
Rule 64    empty -> <empty>

Terminals, with rules where they appear

ARRAY                : 19
ATRIB                : 32
BEGIN                : 7 41
COLON                : 23 27 47 48 48
COMMA                : 45 62
CONST                : 
CONST_VALOR          : 
DEF                  : 38
DIVIDE               : 53
DO                   : 
DOT                  : 37
ELSE                 : 
END                  : 7 20 41
EQUAL                : 
EQUAL_TO             : 16
GREATER_THAN         : 
GREATER_THAN_OR_EQUAL : 
ID                   : 16 23 27 31 33 36 37 38 47 59
IF                   : 
INTEGER              : 28
LBRACKET             : 19 36
LESS_THAN            : 
LESS_THAN_OR_EQUAL   : 
LPAREN               : 38 55 59
MINUS                : 51
NOT_EQUAL_TO         : 
NUMERO               : 19 56
OF                   : 19
PLUS                 : 50
RBRACKET             : 19 36
READ                 : 
REAL                 : 29
RECORD               : 20
RETURN               : 42
RPAREN               : 38 55 59
SEMI                 : 7 12 16 23 27 32 41 42
STRING               : 30
THEN                 : 
TIMES                : 52
TYPE                 : 13
VAR                  : 24
WHILE                : 
WRITE                : 
error                : 

Nonterminals, with rules where they appear

args                 : 60 62
args_opt             : 59
array_access         : 34
array_type_definition : 17
atribuicao           : 10
comando              : 8
corpo_principal      : 1
declaracao           : 2
declaracao_var       : 25 26
empty                : 3 9 22 40 44 49 61
expressao            : 32 36 42 50 50 51 51 52 52 53 53 55 62 63
field_declaration    : 21
field_list           : 20 21
function_body        : 38
function_call        : 12 57
function_declaration : 6
lista_comandos       : 7 8 41
lista_declaracoes    : 1 2
lvalue               : 32 37 58
param                : 45 46
params               : 43 45
params_opt           : 38
programa             : 0
record_access        : 35
record_type_definition : 18
return_statement     : 11
single_type_definition : 14 15
termo                : 54
tipo_retorno_opt     : 38
tipo_specifier       : 19 23 27 47 48
type_declaration_block : 4
type_definition      : 16
type_definition_list : 13 14
var_declaration_block : 5 39
var_declaration_list : 24 25
var_declarations_opt : 41

Parsing method: LALR

state 0

    (0) S' -> . programa
    (1) programa -> . lista_declaracoes corpo_principal
    (2) lista_declaracoes -> . lista_declaracoes declaracao
    (3) lista_declaracoes -> . empty
    (64) empty -> .

    BEGIN           reduce using rule 64 (empty -> .)
    TYPE            reduce using rule 64 (empty -> .)
    VAR             reduce using rule 64 (empty -> .)
    DEF             reduce using rule 64 (empty -> .)

    programa                       shift and go to state 1
    lista_declaracoes              shift and go to state 2
    empty                          shift and go to state 3

state 1

    (0) S' -> programa .



state 2

    (1) programa -> lista_declaracoes . corpo_principal
    (2) lista_declaracoes -> lista_declaracoes . declaracao
    (7) corpo_principal -> . BEGIN lista_comandos END SEMI
    (4) declaracao -> . type_declaration_block
    (5) declaracao -> . var_declaration_block
    (6) declaracao -> . function_declaration
    (13) type_declaration_block -> . TYPE type_definition_list
    (24) var_declaration_block -> . VAR var_declaration_list
    (38) function_declaration -> . DEF ID LPAREN params_opt RPAREN tipo_retorno_opt function_body

    BEGIN           shift and go to state 6
    TYPE            shift and go to state 10
    VAR             shift and go to state 11
    DEF             shift and go to state 12

    corpo_principal                shift and go to state 4
    declaracao                     shift and go to state 5
    type_declaration_block         shift and go to state 7
    var_declaration_block          shift and go to state 8
    function_declaration           shift and go to state 9

state 3

    (3) lista_declaracoes -> empty .

    BEGIN           reduce using rule 3 (lista_declaracoes -> empty .)
    TYPE            reduce using rule 3 (lista_declaracoes -> empty .)
    VAR             reduce using rule 3 (lista_declaracoes -> empty .)
    DEF             reduce using rule 3 (lista_declaracoes -> empty .)


state 4

    (1) programa -> lista_declaracoes corpo_principal .

    $end            reduce using rule 1 (programa -> lista_declaracoes corpo_principal .)


state 5

    (2) lista_declaracoes -> lista_declaracoes declaracao .

    BEGIN           reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracao .)
    TYPE            reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracao .)
    VAR             reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracao .)
    DEF             reduce using rule 2 (lista_declaracoes -> lista_declaracoes declaracao .)


state 6

    (7) corpo_principal -> BEGIN . lista_comandos END SEMI
    (8) lista_comandos -> . lista_comandos comando
    (9) lista_comandos -> . empty
    (64) empty -> .

    END             reduce using rule 64 (empty -> .)
    RETURN          reduce using rule 64 (empty -> .)
    ID              reduce using rule 64 (empty -> .)

    lista_comandos                 shift and go to state 13
    empty                          shift and go to state 14

state 7

    (4) declaracao -> type_declaration_block .

    BEGIN           reduce using rule 4 (declaracao -> type_declaration_block .)
    TYPE            reduce using rule 4 (declaracao -> type_declaration_block .)
    VAR             reduce using rule 4 (declaracao -> type_declaration_block .)
    DEF             reduce using rule 4 (declaracao -> type_declaration_block .)


state 8

    (5) declaracao -> var_declaration_block .

    BEGIN           reduce using rule 5 (declaracao -> var_declaration_block .)
    TYPE            reduce using rule 5 (declaracao -> var_declaration_block .)
    VAR             reduce using rule 5 (declaracao -> var_declaration_block .)
    DEF             reduce using rule 5 (declaracao -> var_declaration_block .)


state 9

    (6) declaracao -> function_declaration .

    BEGIN           reduce using rule 6 (declaracao -> function_declaration .)
    TYPE            reduce using rule 6 (declaracao -> function_declaration .)
    VAR             reduce using rule 6 (declaracao -> function_declaration .)
    DEF             reduce using rule 6 (declaracao -> function_declaration .)


state 10

    (13) type_declaration_block -> TYPE . type_definition_list
    (14) type_definition_list -> . type_definition_list single_type_definition
    (15) type_definition_list -> . single_type_definition
    (16) single_type_definition -> . ID EQUAL_TO type_definition SEMI

    ID              shift and go to state 17

    type_definition_list           shift and go to state 15
    single_type_definition         shift and go to state 16

state 11

    (24) var_declaration_block -> VAR . var_declaration_list
    (25) var_declaration_list -> . var_declaration_list declaracao_var
    (26) var_declaration_list -> . declaracao_var
    (27) declaracao_var -> . ID COLON tipo_specifier SEMI

    ID              shift and go to state 20

    var_declaration_list           shift and go to state 18
    declaracao_var                 shift and go to state 19

state 12

    (38) function_declaration -> DEF . ID LPAREN params_opt RPAREN tipo_retorno_opt function_body

    ID              shift and go to state 21


state 13

    (7) corpo_principal -> BEGIN lista_comandos . END SEMI
    (8) lista_comandos -> lista_comandos . comando
    (10) comando -> . atribuicao
    (11) comando -> . return_statement
    (12) comando -> . function_call SEMI
    (32) atribuicao -> . lvalue ATRIB expressao SEMI
    (42) return_statement -> . RETURN expressao SEMI
    (59) function_call -> . ID LPAREN args_opt RPAREN
    (33) lvalue -> . ID
    (34) lvalue -> . array_access
    (35) lvalue -> . record_access
    (36) array_access -> . ID LBRACKET expressao RBRACKET
    (37) record_access -> . lvalue DOT ID

    END             shift and go to state 22
    RETURN          shift and go to state 28
    ID              shift and go to state 29

    comando                        shift and go to state 23
    atribuicao                     shift and go to state 24
    return_statement               shift and go to state 25
    function_call                  shift and go to state 26
    lvalue                         shift and go to state 27
    array_access                   shift and go to state 30
    record_access                  shift and go to state 31

state 14

    (9) lista_comandos -> empty .

    END             reduce using rule 9 (lista_comandos -> empty .)
    RETURN          reduce using rule 9 (lista_comandos -> empty .)
    ID              reduce using rule 9 (lista_comandos -> empty .)


state 15

    (13) type_declaration_block -> TYPE type_definition_list .
    (14) type_definition_list -> type_definition_list . single_type_definition
    (16) single_type_definition -> . ID EQUAL_TO type_definition SEMI

    BEGIN           reduce using rule 13 (type_declaration_block -> TYPE type_definition_list .)
    TYPE            reduce using rule 13 (type_declaration_block -> TYPE type_definition_list .)
    VAR             reduce using rule 13 (type_declaration_block -> TYPE type_definition_list .)
    DEF             reduce using rule 13 (type_declaration_block -> TYPE type_definition_list .)
    ID              shift and go to state 17

    single_type_definition         shift and go to state 32

state 16

    (15) type_definition_list -> single_type_definition .

    ID              reduce using rule 15 (type_definition_list -> single_type_definition .)
    BEGIN           reduce using rule 15 (type_definition_list -> single_type_definition .)
    TYPE            reduce using rule 15 (type_definition_list -> single_type_definition .)
    VAR             reduce using rule 15 (type_definition_list -> single_type_definition .)
    DEF             reduce using rule 15 (type_definition_list -> single_type_definition .)


state 17

    (16) single_type_definition -> ID . EQUAL_TO type_definition SEMI

    EQUAL_TO        shift and go to state 33


state 18

    (24) var_declaration_block -> VAR var_declaration_list .
    (25) var_declaration_list -> var_declaration_list . declaracao_var
    (27) declaracao_var -> . ID COLON tipo_specifier SEMI

    BEGIN           reduce using rule 24 (var_declaration_block -> VAR var_declaration_list .)
    TYPE            reduce using rule 24 (var_declaration_block -> VAR var_declaration_list .)
    VAR             reduce using rule 24 (var_declaration_block -> VAR var_declaration_list .)
    DEF             reduce using rule 24 (var_declaration_block -> VAR var_declaration_list .)
    ID              shift and go to state 20

    declaracao_var                 shift and go to state 34

state 19

    (26) var_declaration_list -> declaracao_var .

    ID              reduce using rule 26 (var_declaration_list -> declaracao_var .)
    BEGIN           reduce using rule 26 (var_declaration_list -> declaracao_var .)
    TYPE            reduce using rule 26 (var_declaration_list -> declaracao_var .)
    VAR             reduce using rule 26 (var_declaration_list -> declaracao_var .)
    DEF             reduce using rule 26 (var_declaration_list -> declaracao_var .)


state 20

    (27) declaracao_var -> ID . COLON tipo_specifier SEMI

    COLON           shift and go to state 35


state 21

    (38) function_declaration -> DEF ID . LPAREN params_opt RPAREN tipo_retorno_opt function_body

    LPAREN          shift and go to state 36


state 22

    (7) corpo_principal -> BEGIN lista_comandos END . SEMI

    SEMI            shift and go to state 37


state 23

    (8) lista_comandos -> lista_comandos comando .

    END             reduce using rule 8 (lista_comandos -> lista_comandos comando .)
    RETURN          reduce using rule 8 (lista_comandos -> lista_comandos comando .)
    ID              reduce using rule 8 (lista_comandos -> lista_comandos comando .)


state 24

    (10) comando -> atribuicao .

    END             reduce using rule 10 (comando -> atribuicao .)
    RETURN          reduce using rule 10 (comando -> atribuicao .)
    ID              reduce using rule 10 (comando -> atribuicao .)


state 25

    (11) comando -> return_statement .

    END             reduce using rule 11 (comando -> return_statement .)
    RETURN          reduce using rule 11 (comando -> return_statement .)
    ID              reduce using rule 11 (comando -> return_statement .)


state 26

    (12) comando -> function_call . SEMI

    SEMI            shift and go to state 38


state 27

    (32) atribuicao -> lvalue . ATRIB expressao SEMI
    (37) record_access -> lvalue . DOT ID

    ATRIB           shift and go to state 39
    DOT             shift and go to state 40


state 28

    (42) return_statement -> RETURN . expressao SEMI
    (50) expressao -> . expressao PLUS expressao
    (51) expressao -> . expressao MINUS expressao
    (52) expressao -> . expressao TIMES expressao
    (53) expressao -> . expressao DIVIDE expressao
    (54) expressao -> . termo
    (55) termo -> . LPAREN expressao RPAREN
    (56) termo -> . NUMERO
    (57) termo -> . function_call
    (58) termo -> . lvalue
    (59) function_call -> . ID LPAREN args_opt RPAREN
    (33) lvalue -> . ID
    (34) lvalue -> . array_access
    (35) lvalue -> . record_access
    (36) array_access -> . ID LBRACKET expressao RBRACKET
    (37) record_access -> . lvalue DOT ID

    LPAREN          shift and go to state 43
    NUMERO          shift and go to state 44
    ID              shift and go to state 29

    expressao                      shift and go to state 41
    termo                          shift and go to state 42
    function_call                  shift and go to state 45
    lvalue                         shift and go to state 46
    array_access                   shift and go to state 30
    record_access                  shift and go to state 31

state 29

    (59) function_call -> ID . LPAREN args_opt RPAREN
    (33) lvalue -> ID .
    (36) array_access -> ID . LBRACKET expressao RBRACKET

    LPAREN          shift and go to state 47
    ATRIB           reduce using rule 33 (lvalue -> ID .)
    DOT             reduce using rule 33 (lvalue -> ID .)
    SEMI            reduce using rule 33 (lvalue -> ID .)
    PLUS            reduce using rule 33 (lvalue -> ID .)
    MINUS           reduce using rule 33 (lvalue -> ID .)
    TIMES           reduce using rule 33 (lvalue -> ID .)
    DIVIDE          reduce using rule 33 (lvalue -> ID .)
    RPAREN          reduce using rule 33 (lvalue -> ID .)
    COMMA           reduce using rule 33 (lvalue -> ID .)
    RBRACKET        reduce using rule 33 (lvalue -> ID .)
    LBRACKET        shift and go to state 48


state 30

    (34) lvalue -> array_access .

    ATRIB           reduce using rule 34 (lvalue -> array_access .)
    DOT             reduce using rule 34 (lvalue -> array_access .)
    SEMI            reduce using rule 34 (lvalue -> array_access .)
    PLUS            reduce using rule 34 (lvalue -> array_access .)
    MINUS           reduce using rule 34 (lvalue -> array_access .)
    TIMES           reduce using rule 34 (lvalue -> array_access .)
    DIVIDE          reduce using rule 34 (lvalue -> array_access .)
    RPAREN          reduce using rule 34 (lvalue -> array_access .)
    COMMA           reduce using rule 34 (lvalue -> array_access .)
    RBRACKET        reduce using rule 34 (lvalue -> array_access .)


state 31

    (35) lvalue -> record_access .

    ATRIB           reduce using rule 35 (lvalue -> record_access .)
    DOT             reduce using rule 35 (lvalue -> record_access .)
    SEMI            reduce using rule 35 (lvalue -> record_access .)
    PLUS            reduce using rule 35 (lvalue -> record_access .)
    MINUS           reduce using rule 35 (lvalue -> record_access .)
    TIMES           reduce using rule 35 (lvalue -> record_access .)
    DIVIDE          reduce using rule 35 (lvalue -> record_access .)
    RPAREN          reduce using rule 35 (lvalue -> record_access .)
    COMMA           reduce using rule 35 (lvalue -> record_access .)
    RBRACKET        reduce using rule 35 (lvalue -> record_access .)


state 32

    (14) type_definition_list -> type_definition_list single_type_definition .

    ID              reduce using rule 14 (type_definition_list -> type_definition_list single_type_definition .)
    BEGIN           reduce using rule 14 (type_definition_list -> type_definition_list single_type_definition .)
    TYPE            reduce using rule 14 (type_definition_list -> type_definition_list single_type_definition .)
    VAR             reduce using rule 14 (type_definition_list -> type_definition_list single_type_definition .)
    DEF             reduce using rule 14 (type_definition_list -> type_definition_list single_type_definition .)


state 33

    (16) single_type_definition -> ID EQUAL_TO . type_definition SEMI
    (17) type_definition -> . array_type_definition
    (18) type_definition -> . record_type_definition
    (19) array_type_definition -> . ARRAY LBRACKET NUMERO RBRACKET OF tipo_specifier
    (20) record_type_definition -> . RECORD field_list END

    ARRAY           shift and go to state 52
    RECORD          shift and go to state 53

    type_definition                shift and go to state 49
    array_type_definition          shift and go to state 50
    record_type_definition         shift and go to state 51

state 34

    (25) var_declaration_list -> var_declaration_list declaracao_var .

    ID              reduce using rule 25 (var_declaration_list -> var_declaration_list declaracao_var .)
    BEGIN           reduce using rule 25 (var_declaration_list -> var_declaration_list declaracao_var .)
    TYPE            reduce using rule 25 (var_declaration_list -> var_declaration_list declaracao_var .)
    VAR             reduce using rule 25 (var_declaration_list -> var_declaration_list declaracao_var .)
    DEF             reduce using rule 25 (var_declaration_list -> var_declaration_list declaracao_var .)


state 35

    (27) declaracao_var -> ID COLON . tipo_specifier SEMI
    (28) tipo_specifier -> . INTEGER
    (29) tipo_specifier -> . REAL
    (30) tipo_specifier -> . STRING
    (31) tipo_specifier -> . ID

    INTEGER         shift and go to state 56
    REAL            shift and go to state 57
    STRING          shift and go to state 58
    ID              shift and go to state 54

    tipo_specifier                 shift and go to state 55

state 36

    (38) function_declaration -> DEF ID LPAREN . params_opt RPAREN tipo_retorno_opt function_body
    (43) params_opt -> . params
    (44) params_opt -> . empty
    (45) params -> . params COMMA param
    (46) params -> . param
    (64) empty -> .
    (47) param -> . ID COLON tipo_specifier

    RPAREN          reduce using rule 64 (empty -> .)
    ID              shift and go to state 59

    params_opt                     shift and go to state 60
    params                         shift and go to state 61
    empty                          shift and go to state 62
    param                          shift and go to state 63

state 37

    (7) corpo_principal -> BEGIN lista_comandos END SEMI .

    $end            reduce using rule 7 (corpo_principal -> BEGIN lista_comandos END SEMI .)


state 38

    (12) comando -> function_call SEMI .

    END             reduce using rule 12 (comando -> function_call SEMI .)
    RETURN          reduce using rule 12 (comando -> function_call SEMI .)
    ID              reduce using rule 12 (comando -> function_call SEMI .)


state 39

    (32) atribuicao -> lvalue ATRIB . expressao SEMI
    (50) expressao -> . expressao PLUS expressao
    (51) expressao -> . expressao MINUS expressao
    (52) expressao -> . expressao TIMES expressao
    (53) expressao -> . expressao DIVIDE expressao
    (54) expressao -> . termo
    (55) termo -> . LPAREN expressao RPAREN
    (56) termo -> . NUMERO
    (57) termo -> . function_call
    (58) termo -> . lvalue
    (59) function_call -> . ID LPAREN args_opt RPAREN
    (33) lvalue -> . ID
    (34) lvalue -> . array_access
    (35) lvalue -> . record_access
    (36) array_access -> . ID LBRACKET expressao RBRACKET
    (37) record_access -> . lvalue DOT ID

    LPAREN          shift and go to state 43
    NUMERO          shift and go to state 44
    ID              shift and go to state 29

    lvalue                         shift and go to state 46
    expressao                      shift and go to state 64
    termo                          shift and go to state 42
    function_call                  shift and go to state 45
    array_access                   shift and go to state 30
    record_access                  shift and go to state 31

state 40

    (37) record_access -> lvalue DOT . ID

    ID              shift and go to state 65


state 41

    (42) return_statement -> RETURN expressao . SEMI
    (50) expressao -> expressao . PLUS expressao
    (51) expressao -> expressao . MINUS expressao
    (52) expressao -> expressao . TIMES expressao
    (53) expressao -> expressao . DIVIDE expressao

    SEMI            shift and go to state 66
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    TIMES           shift and go to state 69
    DIVIDE          shift and go to state 70


state 42

    (54) expressao -> termo .

    SEMI            reduce using rule 54 (expressao -> termo .)
    PLUS            reduce using rule 54 (expressao -> termo .)
    MINUS           reduce using rule 54 (expressao -> termo .)
    TIMES           reduce using rule 54 (expressao -> termo .)
    DIVIDE          reduce using rule 54 (expressao -> termo .)
    RPAREN          reduce using rule 54 (expressao -> termo .)
    COMMA           reduce using rule 54 (expressao -> termo .)
    RBRACKET        reduce using rule 54 (expressao -> termo .)


state 43

    (55) termo -> LPAREN . expressao RPAREN
    (50) expressao -> . expressao PLUS expressao
    (51) expressao -> . expressao MINUS expressao
    (52) expressao -> . expressao TIMES expressao
    (53) expressao -> . expressao DIVIDE expressao
    (54) expressao -> . termo
    (55) termo -> . LPAREN expressao RPAREN
    (56) termo -> . NUMERO
    (57) termo -> . function_call
    (58) termo -> . lvalue
    (59) function_call -> . ID LPAREN args_opt RPAREN
    (33) lvalue -> . ID
    (34) lvalue -> . array_access
    (35) lvalue -> . record_access
    (36) array_access -> . ID LBRACKET expressao RBRACKET
    (37) record_access -> . lvalue DOT ID

    LPAREN          shift and go to state 43
    NUMERO          shift and go to state 44
    ID              shift and go to state 29

    expressao                      shift and go to state 71
    termo                          shift and go to state 42
    function_call                  shift and go to state 45
    lvalue                         shift and go to state 46
    array_access                   shift and go to state 30
    record_access                  shift and go to state 31

state 44

    (56) termo -> NUMERO .

    SEMI            reduce using rule 56 (termo -> NUMERO .)
    PLUS            reduce using rule 56 (termo -> NUMERO .)
    MINUS           reduce using rule 56 (termo -> NUMERO .)
    TIMES           reduce using rule 56 (termo -> NUMERO .)
    DIVIDE          reduce using rule 56 (termo -> NUMERO .)
    RPAREN          reduce using rule 56 (termo -> NUMERO .)
    COMMA           reduce using rule 56 (termo -> NUMERO .)
    RBRACKET        reduce using rule 56 (termo -> NUMERO .)


state 45

    (57) termo -> function_call .

    SEMI            reduce using rule 57 (termo -> function_call .)
    PLUS            reduce using rule 57 (termo -> function_call .)
    MINUS           reduce using rule 57 (termo -> function_call .)
    TIMES           reduce using rule 57 (termo -> function_call .)
    DIVIDE          reduce using rule 57 (termo -> function_call .)
    RPAREN          reduce using rule 57 (termo -> function_call .)
    COMMA           reduce using rule 57 (termo -> function_call .)
    RBRACKET        reduce using rule 57 (termo -> function_call .)


state 46

    (58) termo -> lvalue .
    (37) record_access -> lvalue . DOT ID

    SEMI            reduce using rule 58 (termo -> lvalue .)
    PLUS            reduce using rule 58 (termo -> lvalue .)
    MINUS           reduce using rule 58 (termo -> lvalue .)
    TIMES           reduce using rule 58 (termo -> lvalue .)
    DIVIDE          reduce using rule 58 (termo -> lvalue .)
    RPAREN          reduce using rule 58 (termo -> lvalue .)
    COMMA           reduce using rule 58 (termo -> lvalue .)
    RBRACKET        reduce using rule 58 (termo -> lvalue .)
    DOT             shift and go to state 40


state 47

    (59) function_call -> ID LPAREN . args_opt RPAREN
    (60) args_opt -> . args
    (61) args_opt -> . empty
    (62) args -> . args COMMA expressao
    (63) args -> . expressao
    (64) empty -> .
    (50) expressao -> . expressao PLUS expressao
    (51) expressao -> . expressao MINUS expressao
    (52) expressao -> . expressao TIMES expressao
    (53) expressao -> . expressao DIVIDE expressao
    (54) expressao -> . termo
    (55) termo -> . LPAREN expressao RPAREN
    (56) termo -> . NUMERO
    (57) termo -> . function_call
    (58) termo -> . lvalue
    (59) function_call -> . ID LPAREN args_opt RPAREN
    (33) lvalue -> . ID
    (34) lvalue -> . array_access
    (35) lvalue -> . record_access
    (36) array_access -> . ID LBRACKET expressao RBRACKET
    (37) record_access -> . lvalue DOT ID

    RPAREN          reduce using rule 64 (empty -> .)
    LPAREN          shift and go to state 43
    NUMERO          shift and go to state 44
    ID              shift and go to state 29

    args_opt                       shift and go to state 72
    args                           shift and go to state 73
    empty                          shift and go to state 74
    expressao                      shift and go to state 75
    termo                          shift and go to state 42
    function_call                  shift and go to state 45
    lvalue                         shift and go to state 46
    array_access                   shift and go to state 30
    record_access                  shift and go to state 31

state 48

    (36) array_access -> ID LBRACKET . expressao RBRACKET
    (50) expressao -> . expressao PLUS expressao
    (51) expressao -> . expressao MINUS expressao
    (52) expressao -> . expressao TIMES expressao
    (53) expressao -> . expressao DIVIDE expressao
    (54) expressao -> . termo
    (55) termo -> . LPAREN expressao RPAREN
    (56) termo -> . NUMERO
    (57) termo -> . function_call
    (58) termo -> . lvalue
    (59) function_call -> . ID LPAREN args_opt RPAREN
    (33) lvalue -> . ID
    (34) lvalue -> . array_access
    (35) lvalue -> . record_access
    (36) array_access -> . ID LBRACKET expressao RBRACKET
    (37) record_access -> . lvalue DOT ID

    LPAREN          shift and go to state 43
    NUMERO          shift and go to state 44
    ID              shift and go to state 29

    expressao                      shift and go to state 76
    termo                          shift and go to state 42
    function_call                  shift and go to state 45
    lvalue                         shift and go to state 46
    array_access                   shift and go to state 30
    record_access                  shift and go to state 31

state 49

    (16) single_type_definition -> ID EQUAL_TO type_definition . SEMI

    SEMI            shift and go to state 77


state 50

    (17) type_definition -> array_type_definition .

    SEMI            reduce using rule 17 (type_definition -> array_type_definition .)


state 51

    (18) type_definition -> record_type_definition .

    SEMI            reduce using rule 18 (type_definition -> record_type_definition .)


state 52

    (19) array_type_definition -> ARRAY . LBRACKET NUMERO RBRACKET OF tipo_specifier

    LBRACKET        shift and go to state 78


state 53

    (20) record_type_definition -> RECORD . field_list END
    (21) field_list -> . field_list field_declaration
    (22) field_list -> . empty
    (64) empty -> .

    END             reduce using rule 64 (empty -> .)
    ID              reduce using rule 64 (empty -> .)

    field_list                     shift and go to state 79
    empty                          shift and go to state 80

state 54

    (31) tipo_specifier -> ID .

    SEMI            reduce using rule 31 (tipo_specifier -> ID .)
    COMMA           reduce using rule 31 (tipo_specifier -> ID .)
    RPAREN          reduce using rule 31 (tipo_specifier -> ID .)
    VAR             reduce using rule 31 (tipo_specifier -> ID .)
    BEGIN           reduce using rule 31 (tipo_specifier -> ID .)


state 55

    (27) declaracao_var -> ID COLON tipo_specifier . SEMI

    SEMI            shift and go to state 81


state 56

    (28) tipo_specifier -> INTEGER .

    SEMI            reduce using rule 28 (tipo_specifier -> INTEGER .)
    COMMA           reduce using rule 28 (tipo_specifier -> INTEGER .)
    RPAREN          reduce using rule 28 (tipo_specifier -> INTEGER .)
    VAR             reduce using rule 28 (tipo_specifier -> INTEGER .)
    BEGIN           reduce using rule 28 (tipo_specifier -> INTEGER .)


state 57

    (29) tipo_specifier -> REAL .

    SEMI            reduce using rule 29 (tipo_specifier -> REAL .)
    COMMA           reduce using rule 29 (tipo_specifier -> REAL .)
    RPAREN          reduce using rule 29 (tipo_specifier -> REAL .)
    VAR             reduce using rule 29 (tipo_specifier -> REAL .)
    BEGIN           reduce using rule 29 (tipo_specifier -> REAL .)


state 58

    (30) tipo_specifier -> STRING .

    SEMI            reduce using rule 30 (tipo_specifier -> STRING .)
    COMMA           reduce using rule 30 (tipo_specifier -> STRING .)
    RPAREN          reduce using rule 30 (tipo_specifier -> STRING .)
    VAR             reduce using rule 30 (tipo_specifier -> STRING .)
    BEGIN           reduce using rule 30 (tipo_specifier -> STRING .)


state 59

    (47) param -> ID . COLON tipo_specifier

    COLON           shift and go to state 82


state 60

    (38) function_declaration -> DEF ID LPAREN params_opt . RPAREN tipo_retorno_opt function_body

    RPAREN          shift and go to state 83


state 61

    (43) params_opt -> params .
    (45) params -> params . COMMA param

    RPAREN          reduce using rule 43 (params_opt -> params .)
    COMMA           shift and go to state 84


state 62

    (44) params_opt -> empty .

    RPAREN          reduce using rule 44 (params_opt -> empty .)


state 63

    (46) params -> param .

    COMMA           reduce using rule 46 (params -> param .)
    RPAREN          reduce using rule 46 (params -> param .)


state 64

    (32) atribuicao -> lvalue ATRIB expressao . SEMI
    (50) expressao -> expressao . PLUS expressao
    (51) expressao -> expressao . MINUS expressao
    (52) expressao -> expressao . TIMES expressao
    (53) expressao -> expressao . DIVIDE expressao

    SEMI            shift and go to state 85
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    TIMES           shift and go to state 69
    DIVIDE          shift and go to state 70


state 65

    (37) record_access -> lvalue DOT ID .

    ATRIB           reduce using rule 37 (record_access -> lvalue DOT ID .)
    DOT             reduce using rule 37 (record_access -> lvalue DOT ID .)
    SEMI            reduce using rule 37 (record_access -> lvalue DOT ID .)
    PLUS            reduce using rule 37 (record_access -> lvalue DOT ID .)
    MINUS           reduce using rule 37 (record_access -> lvalue DOT ID .)
    TIMES           reduce using rule 37 (record_access -> lvalue DOT ID .)
    DIVIDE          reduce using rule 37 (record_access -> lvalue DOT ID .)
    RPAREN          reduce using rule 37 (record_access -> lvalue DOT ID .)
    COMMA           reduce using rule 37 (record_access -> lvalue DOT ID .)
    RBRACKET        reduce using rule 37 (record_access -> lvalue DOT ID .)


state 66

    (42) return_statement -> RETURN expressao SEMI .

    END             reduce using rule 42 (return_statement -> RETURN expressao SEMI .)
    RETURN          reduce using rule 42 (return_statement -> RETURN expressao SEMI .)
    ID              reduce using rule 42 (return_statement -> RETURN expressao SEMI .)


state 67

    (50) expressao -> expressao PLUS . expressao
    (50) expressao -> . expressao PLUS expressao
    (51) expressao -> . expressao MINUS expressao
    (52) expressao -> . expressao TIMES expressao
    (53) expressao -> . expressao DIVIDE expressao
    (54) expressao -> . termo
    (55) termo -> . LPAREN expressao RPAREN
    (56) termo -> . NUMERO
    (57) termo -> . function_call
    (58) termo -> . lvalue
    (59) function_call -> . ID LPAREN args_opt RPAREN
    (33) lvalue -> . ID
    (34) lvalue -> . array_access
    (35) lvalue -> . record_access
    (36) array_access -> . ID LBRACKET expressao RBRACKET
    (37) record_access -> . lvalue DOT ID

    LPAREN          shift and go to state 43
    NUMERO          shift and go to state 44
    ID              shift and go to state 29

    expressao                      shift and go to state 86
    termo                          shift and go to state 42
    function_call                  shift and go to state 45
    lvalue                         shift and go to state 46
    array_access                   shift and go to state 30
    record_access                  shift and go to state 31

state 68

    (51) expressao -> expressao MINUS . expressao
    (50) expressao -> . expressao PLUS expressao
    (51) expressao -> . expressao MINUS expressao
    (52) expressao -> . expressao TIMES expressao
    (53) expressao -> . expressao DIVIDE expressao
    (54) expressao -> . termo
    (55) termo -> . LPAREN expressao RPAREN
    (56) termo -> . NUMERO
    (57) termo -> . function_call
    (58) termo -> . lvalue
    (59) function_call -> . ID LPAREN args_opt RPAREN
    (33) lvalue -> . ID
    (34) lvalue -> . array_access
    (35) lvalue -> . record_access
    (36) array_access -> . ID LBRACKET expressao RBRACKET
    (37) record_access -> . lvalue DOT ID

    LPAREN          shift and go to state 43
    NUMERO          shift and go to state 44
    ID              shift and go to state 29

    expressao                      shift and go to state 87
    termo                          shift and go to state 42
    function_call                  shift and go to state 45
    lvalue                         shift and go to state 46
    array_access                   shift and go to state 30
    record_access                  shift and go to state 31

state 69

    (52) expressao -> expressao TIMES . expressao
    (50) expressao -> . expressao PLUS expressao
    (51) expressao -> . expressao MINUS expressao
    (52) expressao -> . expressao TIMES expressao
    (53) expressao -> . expressao DIVIDE expressao
    (54) expressao -> . termo
    (55) termo -> . LPAREN expressao RPAREN
    (56) termo -> . NUMERO
    (57) termo -> . function_call
    (58) termo -> . lvalue
    (59) function_call -> . ID LPAREN args_opt RPAREN
    (33) lvalue -> . ID
    (34) lvalue -> . array_access
    (35) lvalue -> . record_access
    (36) array_access -> . ID LBRACKET expressao RBRACKET
    (37) record_access -> . lvalue DOT ID

    LPAREN          shift and go to state 43
    NUMERO          shift and go to state 44
    ID              shift and go to state 29

    expressao                      shift and go to state 88
    termo                          shift and go to state 42
    function_call                  shift and go to state 45
    lvalue                         shift and go to state 46
    array_access                   shift and go to state 30
    record_access                  shift and go to state 31

state 70

    (53) expressao -> expressao DIVIDE . expressao
    (50) expressao -> . expressao PLUS expressao
    (51) expressao -> . expressao MINUS expressao
    (52) expressao -> . expressao TIMES expressao
    (53) expressao -> . expressao DIVIDE expressao
    (54) expressao -> . termo
    (55) termo -> . LPAREN expressao RPAREN
    (56) termo -> . NUMERO
    (57) termo -> . function_call
    (58) termo -> . lvalue
    (59) function_call -> . ID LPAREN args_opt RPAREN
    (33) lvalue -> . ID
    (34) lvalue -> . array_access
    (35) lvalue -> . record_access
    (36) array_access -> . ID LBRACKET expressao RBRACKET
    (37) record_access -> . lvalue DOT ID

    LPAREN          shift and go to state 43
    NUMERO          shift and go to state 44
    ID              shift and go to state 29

    expressao                      shift and go to state 89
    termo                          shift and go to state 42
    function_call                  shift and go to state 45
    lvalue                         shift and go to state 46
    array_access                   shift and go to state 30
    record_access                  shift and go to state 31

state 71

    (55) termo -> LPAREN expressao . RPAREN
    (50) expressao -> expressao . PLUS expressao
    (51) expressao -> expressao . MINUS expressao
    (52) expressao -> expressao . TIMES expressao
    (53) expressao -> expressao . DIVIDE expressao

    RPAREN          shift and go to state 90
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    TIMES           shift and go to state 69
    DIVIDE          shift and go to state 70


state 72

    (59) function_call -> ID LPAREN args_opt . RPAREN

    RPAREN          shift and go to state 91


state 73

    (60) args_opt -> args .
    (62) args -> args . COMMA expressao

    RPAREN          reduce using rule 60 (args_opt -> args .)
    COMMA           shift and go to state 92


state 74

    (61) args_opt -> empty .

    RPAREN          reduce using rule 61 (args_opt -> empty .)


state 75

    (63) args -> expressao .
    (50) expressao -> expressao . PLUS expressao
    (51) expressao -> expressao . MINUS expressao
    (52) expressao -> expressao . TIMES expressao
    (53) expressao -> expressao . DIVIDE expressao

    COMMA           reduce using rule 63 (args -> expressao .)
    RPAREN          reduce using rule 63 (args -> expressao .)
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    TIMES           shift and go to state 69
    DIVIDE          shift and go to state 70


state 76

    (36) array_access -> ID LBRACKET expressao . RBRACKET
    (50) expressao -> expressao . PLUS expressao
    (51) expressao -> expressao . MINUS expressao
    (52) expressao -> expressao . TIMES expressao
    (53) expressao -> expressao . DIVIDE expressao

    RBRACKET        shift and go to state 93
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    TIMES           shift and go to state 69
    DIVIDE          shift and go to state 70


state 77

    (16) single_type_definition -> ID EQUAL_TO type_definition SEMI .

    ID              reduce using rule 16 (single_type_definition -> ID EQUAL_TO type_definition SEMI .)
    BEGIN           reduce using rule 16 (single_type_definition -> ID EQUAL_TO type_definition SEMI .)
    TYPE            reduce using rule 16 (single_type_definition -> ID EQUAL_TO type_definition SEMI .)
    VAR             reduce using rule 16 (single_type_definition -> ID EQUAL_TO type_definition SEMI .)
    DEF             reduce using rule 16 (single_type_definition -> ID EQUAL_TO type_definition SEMI .)


state 78

    (19) array_type_definition -> ARRAY LBRACKET . NUMERO RBRACKET OF tipo_specifier

    NUMERO          shift and go to state 94


state 79

    (20) record_type_definition -> RECORD field_list . END
    (21) field_list -> field_list . field_declaration
    (23) field_declaration -> . ID COLON tipo_specifier SEMI

    END             shift and go to state 95
    ID              shift and go to state 97

    field_declaration              shift and go to state 96

state 80

    (22) field_list -> empty .

    END             reduce using rule 22 (field_list -> empty .)
    ID              reduce using rule 22 (field_list -> empty .)


state 81

    (27) declaracao_var -> ID COLON tipo_specifier SEMI .

    ID              reduce using rule 27 (declaracao_var -> ID COLON tipo_specifier SEMI .)
    BEGIN           reduce using rule 27 (declaracao_var -> ID COLON tipo_specifier SEMI .)
    TYPE            reduce using rule 27 (declaracao_var -> ID COLON tipo_specifier SEMI .)
    VAR             reduce using rule 27 (declaracao_var -> ID COLON tipo_specifier SEMI .)
    DEF             reduce using rule 27 (declaracao_var -> ID COLON tipo_specifier SEMI .)


state 82

    (47) param -> ID COLON . tipo_specifier
    (28) tipo_specifier -> . INTEGER
    (29) tipo_specifier -> . REAL
    (30) tipo_specifier -> . STRING
    (31) tipo_specifier -> . ID

    INTEGER         shift and go to state 56
    REAL            shift and go to state 57
    STRING          shift and go to state 58
    ID              shift and go to state 54

    tipo_specifier                 shift and go to state 98

state 83

    (38) function_declaration -> DEF ID LPAREN params_opt RPAREN . tipo_retorno_opt function_body
    (48) tipo_retorno_opt -> . COLON COLON tipo_specifier
    (49) tipo_retorno_opt -> . empty
    (64) empty -> .

    COLON           shift and go to state 100
    VAR             reduce using rule 64 (empty -> .)
    BEGIN           reduce using rule 64 (empty -> .)

    tipo_retorno_opt               shift and go to state 99
    empty                          shift and go to state 101

state 84

    (45) params -> params COMMA . param
    (47) param -> . ID COLON tipo_specifier

    ID              shift and go to state 59

    param                          shift and go to state 102

state 85

    (32) atribuicao -> lvalue ATRIB expressao SEMI .

    END             reduce using rule 32 (atribuicao -> lvalue ATRIB expressao SEMI .)
    RETURN          reduce using rule 32 (atribuicao -> lvalue ATRIB expressao SEMI .)
    ID              reduce using rule 32 (atribuicao -> lvalue ATRIB expressao SEMI .)


state 86

    (50) expressao -> expressao PLUS expressao .
    (50) expressao -> expressao . PLUS expressao
    (51) expressao -> expressao . MINUS expressao
    (52) expressao -> expressao . TIMES expressao
    (53) expressao -> expressao . DIVIDE expressao

    SEMI            reduce using rule 50 (expressao -> expressao PLUS expressao .)
    PLUS            reduce using rule 50 (expressao -> expressao PLUS expressao .)
    MINUS           reduce using rule 50 (expressao -> expressao PLUS expressao .)
    RPAREN          reduce using rule 50 (expressao -> expressao PLUS expressao .)
    COMMA           reduce using rule 50 (expressao -> expressao PLUS expressao .)
    RBRACKET        reduce using rule 50 (expressao -> expressao PLUS expressao .)
    TIMES           shift and go to state 69
    DIVIDE          shift and go to state 70

  ! TIMES           [ reduce using rule 50 (expressao -> expressao PLUS expressao .) ]
  ! DIVIDE          [ reduce using rule 50 (expressao -> expressao PLUS expressao .) ]
  ! PLUS            [ shift and go to state 67 ]
  ! MINUS           [ shift and go to state 68 ]


state 87

    (51) expressao -> expressao MINUS expressao .
    (50) expressao -> expressao . PLUS expressao
    (51) expressao -> expressao . MINUS expressao
    (52) expressao -> expressao . TIMES expressao
    (53) expressao -> expressao . DIVIDE expressao

    SEMI            reduce using rule 51 (expressao -> expressao MINUS expressao .)
    PLUS            reduce using rule 51 (expressao -> expressao MINUS expressao .)
    MINUS           reduce using rule 51 (expressao -> expressao MINUS expressao .)
    RPAREN          reduce using rule 51 (expressao -> expressao MINUS expressao .)
    COMMA           reduce using rule 51 (expressao -> expressao MINUS expressao .)
    RBRACKET        reduce using rule 51 (expressao -> expressao MINUS expressao .)
    TIMES           shift and go to state 69
    DIVIDE          shift and go to state 70

  ! TIMES           [ reduce using rule 51 (expressao -> expressao MINUS expressao .) ]
  ! DIVIDE          [ reduce using rule 51 (expressao -> expressao MINUS expressao .) ]
  ! PLUS            [ shift and go to state 67 ]
  ! MINUS           [ shift and go to state 68 ]


state 88

    (52) expressao -> expressao TIMES expressao .
    (50) expressao -> expressao . PLUS expressao
    (51) expressao -> expressao . MINUS expressao
    (52) expressao -> expressao . TIMES expressao
    (53) expressao -> expressao . DIVIDE expressao

    SEMI            reduce using rule 52 (expressao -> expressao TIMES expressao .)
    PLUS            reduce using rule 52 (expressao -> expressao TIMES expressao .)
    MINUS           reduce using rule 52 (expressao -> expressao TIMES expressao .)
    TIMES           reduce using rule 52 (expressao -> expressao TIMES expressao .)
    DIVIDE          reduce using rule 52 (expressao -> expressao TIMES expressao .)
    RPAREN          reduce using rule 52 (expressao -> expressao TIMES expressao .)
    COMMA           reduce using rule 52 (expressao -> expressao TIMES expressao .)
    RBRACKET        reduce using rule 52 (expressao -> expressao TIMES expressao .)

  ! PLUS            [ shift and go to state 67 ]
  ! MINUS           [ shift and go to state 68 ]
  ! TIMES           [ shift and go to state 69 ]
  ! DIVIDE          [ shift and go to state 70 ]


state 89

    (53) expressao -> expressao DIVIDE expressao .
    (50) expressao -> expressao . PLUS expressao
    (51) expressao -> expressao . MINUS expressao
    (52) expressao -> expressao . TIMES expressao
    (53) expressao -> expressao . DIVIDE expressao

    SEMI            reduce using rule 53 (expressao -> expressao DIVIDE expressao .)
    PLUS            reduce using rule 53 (expressao -> expressao DIVIDE expressao .)
    MINUS           reduce using rule 53 (expressao -> expressao DIVIDE expressao .)
    TIMES           reduce using rule 53 (expressao -> expressao DIVIDE expressao .)
    DIVIDE          reduce using rule 53 (expressao -> expressao DIVIDE expressao .)
    RPAREN          reduce using rule 53 (expressao -> expressao DIVIDE expressao .)
    COMMA           reduce using rule 53 (expressao -> expressao DIVIDE expressao .)
    RBRACKET        reduce using rule 53 (expressao -> expressao DIVIDE expressao .)

  ! PLUS            [ shift and go to state 67 ]
  ! MINUS           [ shift and go to state 68 ]
  ! TIMES           [ shift and go to state 69 ]
  ! DIVIDE          [ shift and go to state 70 ]


state 90

    (55) termo -> LPAREN expressao RPAREN .

    SEMI            reduce using rule 55 (termo -> LPAREN expressao RPAREN .)
    PLUS            reduce using rule 55 (termo -> LPAREN expressao RPAREN .)
    MINUS           reduce using rule 55 (termo -> LPAREN expressao RPAREN .)
    TIMES           reduce using rule 55 (termo -> LPAREN expressao RPAREN .)
    DIVIDE          reduce using rule 55 (termo -> LPAREN expressao RPAREN .)
    RPAREN          reduce using rule 55 (termo -> LPAREN expressao RPAREN .)
    COMMA           reduce using rule 55 (termo -> LPAREN expressao RPAREN .)
    RBRACKET        reduce using rule 55 (termo -> LPAREN expressao RPAREN .)


state 91

    (59) function_call -> ID LPAREN args_opt RPAREN .

    SEMI            reduce using rule 59 (function_call -> ID LPAREN args_opt RPAREN .)
    PLUS            reduce using rule 59 (function_call -> ID LPAREN args_opt RPAREN .)
    MINUS           reduce using rule 59 (function_call -> ID LPAREN args_opt RPAREN .)
    TIMES           reduce using rule 59 (function_call -> ID LPAREN args_opt RPAREN .)
    DIVIDE          reduce using rule 59 (function_call -> ID LPAREN args_opt RPAREN .)
    RPAREN          reduce using rule 59 (function_call -> ID LPAREN args_opt RPAREN .)
    COMMA           reduce using rule 59 (function_call -> ID LPAREN args_opt RPAREN .)
    RBRACKET        reduce using rule 59 (function_call -> ID LPAREN args_opt RPAREN .)


state 92

    (62) args -> args COMMA . expressao
    (50) expressao -> . expressao PLUS expressao
    (51) expressao -> . expressao MINUS expressao
    (52) expressao -> . expressao TIMES expressao
    (53) expressao -> . expressao DIVIDE expressao
    (54) expressao -> . termo
    (55) termo -> . LPAREN expressao RPAREN
    (56) termo -> . NUMERO
    (57) termo -> . function_call
    (58) termo -> . lvalue
    (59) function_call -> . ID LPAREN args_opt RPAREN
    (33) lvalue -> . ID
    (34) lvalue -> . array_access
    (35) lvalue -> . record_access
    (36) array_access -> . ID LBRACKET expressao RBRACKET
    (37) record_access -> . lvalue DOT ID

    LPAREN          shift and go to state 43
    NUMERO          shift and go to state 44
    ID              shift and go to state 29

    expressao                      shift and go to state 103
    termo                          shift and go to state 42
    function_call                  shift and go to state 45
    lvalue                         shift and go to state 46
    array_access                   shift and go to state 30
    record_access                  shift and go to state 31

state 93

    (36) array_access -> ID LBRACKET expressao RBRACKET .

    ATRIB           reduce using rule 36 (array_access -> ID LBRACKET expressao RBRACKET .)
    DOT             reduce using rule 36 (array_access -> ID LBRACKET expressao RBRACKET .)
    SEMI            reduce using rule 36 (array_access -> ID LBRACKET expressao RBRACKET .)
    PLUS            reduce using rule 36 (array_access -> ID LBRACKET expressao RBRACKET .)
    MINUS           reduce using rule 36 (array_access -> ID LBRACKET expressao RBRACKET .)
    TIMES           reduce using rule 36 (array_access -> ID LBRACKET expressao RBRACKET .)
    DIVIDE          reduce using rule 36 (array_access -> ID LBRACKET expressao RBRACKET .)
    RPAREN          reduce using rule 36 (array_access -> ID LBRACKET expressao RBRACKET .)
    COMMA           reduce using rule 36 (array_access -> ID LBRACKET expressao RBRACKET .)
    RBRACKET        reduce using rule 36 (array_access -> ID LBRACKET expressao RBRACKET .)


state 94

    (19) array_type_definition -> ARRAY LBRACKET NUMERO . RBRACKET OF tipo_specifier

    RBRACKET        shift and go to state 104


state 95

    (20) record_type_definition -> RECORD field_list END .

    SEMI            reduce using rule 20 (record_type_definition -> RECORD field_list END .)


state 96

    (21) field_list -> field_list field_declaration .

    END             reduce using rule 21 (field_list -> field_list field_declaration .)
    ID              reduce using rule 21 (field_list -> field_list field_declaration .)


state 97

    (23) field_declaration -> ID . COLON tipo_specifier SEMI

    COLON           shift and go to state 105


state 98

    (47) param -> ID COLON tipo_specifier .

    COMMA           reduce using rule 47 (param -> ID COLON tipo_specifier .)
    RPAREN          reduce using rule 47 (param -> ID COLON tipo_specifier .)


state 99

    (38) function_declaration -> DEF ID LPAREN params_opt RPAREN tipo_retorno_opt . function_body
    (41) function_body -> . var_declarations_opt BEGIN lista_comandos END SEMI
    (39) var_declarations_opt -> . var_declaration_block
    (40) var_declarations_opt -> . empty
    (24) var_declaration_block -> . VAR var_declaration_list
    (64) empty -> .

    VAR             shift and go to state 11
    BEGIN           reduce using rule 64 (empty -> .)

    function_body                  shift and go to state 106
    var_declarations_opt           shift and go to state 107
    var_declaration_block          shift and go to state 108
    empty                          shift and go to state 109

state 100

    (48) tipo_retorno_opt -> COLON . COLON tipo_specifier

    COLON           shift and go to state 110


state 101

    (49) tipo_retorno_opt -> empty .

    VAR             reduce using rule 49 (tipo_retorno_opt -> empty .)
    BEGIN           reduce using rule 49 (tipo_retorno_opt -> empty .)


state 102

    (45) params -> params COMMA param .

    COMMA           reduce using rule 45 (params -> params COMMA param .)
    RPAREN          reduce using rule 45 (params -> params COMMA param .)


state 103

    (62) args -> args COMMA expressao .
    (50) expressao -> expressao . PLUS expressao
    (51) expressao -> expressao . MINUS expressao
    (52) expressao -> expressao . TIMES expressao
    (53) expressao -> expressao . DIVIDE expressao

    COMMA           reduce using rule 62 (args -> args COMMA expressao .)
    RPAREN          reduce using rule 62 (args -> args COMMA expressao .)
    PLUS            shift and go to state 67
    MINUS           shift and go to state 68
    TIMES           shift and go to state 69
    DIVIDE          shift and go to state 70


state 104

    (19) array_type_definition -> ARRAY LBRACKET NUMERO RBRACKET . OF tipo_specifier

    OF              shift and go to state 111


state 105

    (23) field_declaration -> ID COLON . tipo_specifier SEMI
    (28) tipo_specifier -> . INTEGER
    (29) tipo_specifier -> . REAL
    (30) tipo_specifier -> . STRING
    (31) tipo_specifier -> . ID

    INTEGER         shift and go to state 56
    REAL            shift and go to state 57
    STRING          shift and go to state 58
    ID              shift and go to state 54

    tipo_specifier                 shift and go to state 112

state 106

    (38) function_declaration -> DEF ID LPAREN params_opt RPAREN tipo_retorno_opt function_body .

    BEGIN           reduce using rule 38 (function_declaration -> DEF ID LPAREN params_opt RPAREN tipo_retorno_opt function_body .)
    TYPE            reduce using rule 38 (function_declaration -> DEF ID LPAREN params_opt RPAREN tipo_retorno_opt function_body .)
    VAR             reduce using rule 38 (function_declaration -> DEF ID LPAREN params_opt RPAREN tipo_retorno_opt function_body .)
    DEF             reduce using rule 38 (function_declaration -> DEF ID LPAREN params_opt RPAREN tipo_retorno_opt function_body .)


state 107

    (41) function_body -> var_declarations_opt . BEGIN lista_comandos END SEMI

    BEGIN           shift and go to state 113


state 108

    (39) var_declarations_opt -> var_declaration_block .

    BEGIN           reduce using rule 39 (var_declarations_opt -> var_declaration_block .)


state 109

    (40) var_declarations_opt -> empty .

    BEGIN           reduce using rule 40 (var_declarations_opt -> empty .)


state 110

    (48) tipo_retorno_opt -> COLON COLON . tipo_specifier
    (28) tipo_specifier -> . INTEGER
    (29) tipo_specifier -> . REAL
    (30) tipo_specifier -> . STRING
    (31) tipo_specifier -> . ID

    INTEGER         shift and go to state 56
    REAL            shift and go to state 57
    STRING          shift and go to state 58
    ID              shift and go to state 54

    tipo_specifier                 shift and go to state 114

state 111

    (19) array_type_definition -> ARRAY LBRACKET NUMERO RBRACKET OF . tipo_specifier
    (28) tipo_specifier -> . INTEGER
    (29) tipo_specifier -> . REAL
    (30) tipo_specifier -> . STRING
    (31) tipo_specifier -> . ID

    INTEGER         shift and go to state 56
    REAL            shift and go to state 57
    STRING          shift and go to state 58
    ID              shift and go to state 54

    tipo_specifier                 shift and go to state 115

state 112

    (23) field_declaration -> ID COLON tipo_specifier . SEMI

    SEMI            shift and go to state 116


state 113

    (41) function_body -> var_declarations_opt BEGIN . lista_comandos END SEMI
    (8) lista_comandos -> . lista_comandos comando
    (9) lista_comandos -> . empty
    (64) empty -> .

    END             reduce using rule 64 (empty -> .)
    RETURN          reduce using rule 64 (empty -> .)
    ID              reduce using rule 64 (empty -> .)

    lista_comandos                 shift and go to state 117
    empty                          shift and go to state 14

state 114

    (48) tipo_retorno_opt -> COLON COLON tipo_specifier .

    VAR             reduce using rule 48 (tipo_retorno_opt -> COLON COLON tipo_specifier .)
    BEGIN           reduce using rule 48 (tipo_retorno_opt -> COLON COLON tipo_specifier .)


state 115

    (19) array_type_definition -> ARRAY LBRACKET NUMERO RBRACKET OF tipo_specifier .

    SEMI            reduce using rule 19 (array_type_definition -> ARRAY LBRACKET NUMERO RBRACKET OF tipo_specifier .)


state 116

    (23) field_declaration -> ID COLON tipo_specifier SEMI .

    END             reduce using rule 23 (field_declaration -> ID COLON tipo_specifier SEMI .)
    ID              reduce using rule 23 (field_declaration -> ID COLON tipo_specifier SEMI .)


state 117

    (41) function_body -> var_declarations_opt BEGIN lista_comandos . END SEMI
    (8) lista_comandos -> lista_comandos . comando
    (10) comando -> . atribuicao
    (11) comando -> . return_statement
    (12) comando -> . function_call SEMI
    (32) atribuicao -> . lvalue ATRIB expressao SEMI
    (42) return_statement -> . RETURN expressao SEMI
    (59) function_call -> . ID LPAREN args_opt RPAREN
    (33) lvalue -> . ID
    (34) lvalue -> . array_access
    (35) lvalue -> . record_access
    (36) array_access -> . ID LBRACKET expressao RBRACKET
    (37) record_access -> . lvalue DOT ID

    END             shift and go to state 118
    RETURN          shift and go to state 28
    ID              shift and go to state 29

    comando                        shift and go to state 23
    atribuicao                     shift and go to state 24
    return_statement               shift and go to state 25
    function_call                  shift and go to state 26
    lvalue                         shift and go to state 27
    array_access                   shift and go to state 30
    record_access                  shift and go to state 31

state 118

    (41) function_body -> var_declarations_opt BEGIN lista_comandos END . SEMI

    SEMI            shift and go to state 119


state 119

    (41) function_body -> var_declarations_opt BEGIN lista_comandos END SEMI .

    BEGIN           reduce using rule 41 (function_body -> var_declarations_opt BEGIN lista_comandos END SEMI .)
    TYPE            reduce using rule 41 (function_body -> var_declarations_opt BEGIN lista_comandos END SEMI .)
    VAR             reduce using rule 41 (function_body -> var_declarations_opt BEGIN lista_comandos END SEMI .)
    DEF             reduce using rule 41 (function_body -> var_declarations_opt BEGIN lista_comandos END SEMI .)

